"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2879],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},p=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=c(r),d=o,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||a;return r?t.createElement(m,s(s({ref:n},p),{},{components:r})):t.createElement(m,s({ref:n},p))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=f;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3233:function(e,n,r){r.r(n),r.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var t=r(3117),o=r(102),a=(r(7294),r(3905)),s=["components"],i={sidebar_position:2},l="Sensor via Docker",c={unversionedId:"install-traffic-capture-sensors/pcap-sensor/sensor-docker",id:"install-traffic-capture-sensors/pcap-sensor/sensor-docker",title:"Sensor via Docker",description:"Install via Docker",source:"@site/docs/install-traffic-capture-sensors/pcap-sensor/sensor-docker.md",sourceDirName:"install-traffic-capture-sensors/pcap-sensor",slug:"/install-traffic-capture-sensors/pcap-sensor/sensor-docker",permalink:"/install-traffic-capture-sensors/pcap-sensor/sensor-docker",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/install-traffic-capture-sensors/pcap-sensor/sensor-docker.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Sensor on Fargate",permalink:"/install-traffic-capture-sensors/pcap-sensor/sensor-fargate"},next:{title:"Sensor on Kubernetes",permalink:"/install-traffic-capture-sensors/pcap-sensor/sensor-kubernetes"}},p={},u=[{value:"Install via Docker",id:"install-via-docker",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Sensor Lifecycle Management",id:"sensor-lifecycle-management",level:2},{value:"Uninstall Sensor",id:"uninstall-sensor",level:3},{value:"Get Sensor Logs",id:"get-sensor-logs",level:3},{value:"Upgrade Sensor",id:"upgrade-sensor",level:3},{value:"Manage Sensor Configuration",id:"manage-sensor-configuration",level:3}],f={toc:u};function d(e){var n=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,t.Z)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sensor-via-docker"},"Sensor via Docker"),(0,a.kt)("h2",{id:"install-via-docker"},"Install via Docker"),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Docker Engine version  ",(0,a.kt)("inlineCode",{parentName:"li"},"18.03.0"),"  and above"),(0,a.kt)("li",{parentName:"ul"},"Admin (or  ",(0,a.kt)("inlineCode",{parentName:"li"},"sudo"),") privileges on the Docker host")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sudo docker run --net=host --rm -it levoai/pcap-sensor:0.0.20 \\\n./bin/init apidump \\\n--satellite-url "your satellite url (http(s)://hostname|IP:port)" \\\n--levo-env "your application environment (staging, production etc.)" \\\n--levoai-org-id "your levo org id"\n')),(0,a.kt)("p",null,"Specify additional flags in the command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'--trace-export-interval "trace export interval in seconds (default 10)"\n--rate-limit "number of traces per minute"\n--filter "pcap filter string, eg. port 8080 and (not port 8081)"\n--host-allow "host allow regex"\n--path-allow "path allow regex"\n--host-exclusions "host exclude regex"\n--path-exclusions "path exclude regex"\n')),(0,a.kt)("h2",{id:"sensor-lifecycle-management"},"Sensor Lifecycle Management"),(0,a.kt)("h3",{id:"uninstall-sensor"},"Uninstall Sensor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Get the container id of the Sensor\ndocker ps | grep "levoai/ebpf_sensor"\n\n# Remove the Sensor\ndocker rm -f <container id from docker ps step above>\n')),(0,a.kt)("h3",{id:"get-sensor-logs"},"Get Sensor Logs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Get the container id of the Sensor\ndocker ps | grep "levoai/ebpf_sensor"\n\nsudo docker logs <container id from docker ps step above>\n')),(0,a.kt)("h3",{id:"upgrade-sensor"},"Upgrade Sensor"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Uninstall Sensor"),(0,a.kt)("li",{parentName:"ul"},"Pull new Sensor image")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull levoai/ebpf_sensor:latest\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Reinstall Sensor")),(0,a.kt)("h3",{id:"manage-sensor-configuration"},"Manage Sensor Configuration"),(0,a.kt)("p",null,"Please refer to ",(0,a.kt)("a",{parentName:"p",href:"/install-traffic-capture-sensors/common-tasks/sensor-configuration"},"Sensor Configuration"),", and ",(0,a.kt)("a",{parentName:"p",href:"/install-traffic-capture-sensors/common-tasks/sensor-configuration#running-via-docker"},"Applying Configuration Changes"),"."))}d.isMDXComponent=!0}}]);