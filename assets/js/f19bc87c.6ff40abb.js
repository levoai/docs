"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6917],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return y}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),f=c(r),y=o,m=f["".concat(s,".").concat(y)]||f[y]||u[y]||a;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9719:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return f}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],p={sidebar_position:2},s="Zero Conf Security Tests - Part 2",c={unversionedId:"test-your-app/test-app-security/zero-conf/zero-conf-2",id:"test-your-app/test-app-security/zero-conf/zero-conf-2",isDocsHomePage:!1,title:"Zero Conf Security Tests - Part 2",description:"3. Generate a security test plan for your APIs",source:"@site/docs/test-your-app/test-app-security/zero-conf/zero-conf-2.md",sourceDirName:"test-your-app/test-app-security/zero-conf",slug:"/test-your-app/test-app-security/zero-conf/zero-conf-2",permalink:"/test-your-app/test-app-security/zero-conf/zero-conf-2",editUrl:"https://github.com/levoai/docs/edit/main/docs/test-your-app/test-app-security/zero-conf/zero-conf-2.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Zero Conf Security Tests - Part 1",permalink:"/test-your-app/test-app-security/zero-conf/zero-conf-1"},next:{title:"Zero Conf Security Tests - Part 3",permalink:"/test-your-app/test-app-security/zero-conf/zero-conf-3"}},l=[{value:"3. Generate a security test plan for your APIs",id:"3-generate-a-security-test-plan-for-your-apis",children:[],level:2}],u={toc:l};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"zero-conf-security-tests---part-2"},"Zero Conf Security Tests - Part 2"),(0,a.kt)("h2",{id:"3-generate-a-security-test-plan-for-your-apis"},"3. Generate a security test plan for your APIs"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Click on ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Plans")," in the side panel and proceed to create a test plan by clicking ",(0,a.kt)("inlineCode",{parentName:"p"},"New Test Plan"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Pick ",(0,a.kt)("inlineCode",{parentName:"p"},"Zero Config")," as the type of test plan to generate ")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"New Test Plan")," dialog pick a suitable name for the plan. ")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Pick the previously imported API catalog as the API asset for this test plan.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Proceed to generate the test plan. The generated test plan will have coverage for several security vulnerabilities."),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"Zero Config Test Plans do not support horizontal authorization bypass (",(0,a.kt)("a",{parentName:"p",href:"/vulnerabilities/v1/OWASP-API-10/A1-BOLA"},"BOLA"),") tests. If you skipped providing RBAC association info via the metadata.yml file, no tests for vertical authorization bypass (",(0,a.kt)("a",{parentName:"p",href:"/vulnerabilities/v1/OWASP-API-10/A5-BFLA"},"BFLA"),") will be generated."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Your new test plan will be in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Config Complete")," state, and is immediately runnable. Please proceed to the next step."))))}f.isMDXComponent=!0}}]);