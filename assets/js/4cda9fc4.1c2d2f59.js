"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1694],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=l(r),m=i,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(k,a(a({ref:t},c),{},{components:r})):n.createElement(k,a({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},669:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return p}});var n=r(3117),i=r(102),o=(r(7294),r(3905)),a=["components"],u={sidebar_position:4,keywords:["API Security","ZAP","OWASP","Linux","macOS","Windows","API Observability"]},s="Quickstart with Minikube",l={unversionedId:"quickstart/quickstart-minikube",id:"quickstart/quickstart-minikube",title:"Quickstart with Minikube",description:"Run the following command to find out which driver your minikube installation is using:",source:"@site/docs/quickstart/quickstart-minikube.md",sourceDirName:"quickstart",slug:"/quickstart/quickstart-minikube",permalink:"/quickstart/quickstart-minikube",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/quickstart/quickstart-minikube.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,keywords:["API Security","ZAP","OWASP","Linux","macOS","Windows","API Observability"]},sidebar:"tutorialSidebar",previous:{title:"Quickstart on Kubernetes",permalink:"/quickstart/quickstart-kubernetes"},next:{title:"Quickstart with Burp",permalink:"/quickstart/quickstart-burp-plugin"}},c={},p=[{value:"Bare-metal or VM-based driver",id:"bare-metal-or-vm-based-driver",level:2},{value:"Docker driver",id:"docker-driver",level:2}],d={toc:p};function m(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quickstart-with-minikube"},"Quickstart with Minikube"),(0,o.kt)("p",null,"Run the following command to find out which driver your minikube installation is using:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"minikube profile list\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"|----------|-----------|---------|--------------|------|---------|---------|-------|--------|\n| Profile  | VM Driver | Runtime |      IP      | Port | Version | Status  | Nodes | Active |\n|----------|-----------|---------|--------------|------|---------|---------|-------|--------|\n| minikube | docker    | docker  | 192.168.49.2 | 8443 | v1.27.3 | Running |     1 | *      |\n|----------|-----------|---------|--------------|------|---------|---------|-------|--------|\n")),(0,o.kt)("p",null,"The second column in the output, ",(0,o.kt)("inlineCode",{parentName:"p"},"VM Driver"),", should list the minikube driver of your existing minikube profile."),(0,o.kt)("p",null,'If you want to test the eBPF Sensor in minikube, we recommend using minikube with a VM driver (e.g. kvm2 or virtualbox). Or if you are already using a VM, you may run minikube on bare metal (with the "none" driver).'),(0,o.kt)("p",null,"You can find the full list of minikube drivers ",(0,o.kt)("a",{parentName:"p",href:"https://minikube.sigs.k8s.io/docs/drivers/"},"in the minikube docs"),"."),(0,o.kt)("p",null,"Based on your minikube driver, follow the instructions below:"),(0,o.kt)("h2",{id:"bare-metal-or-vm-based-driver"},"Bare-metal or VM-based driver"),(0,o.kt)("p",null,"Follow the ",(0,o.kt)("a",{parentName:"p",href:"/install-traffic-capture-sensors/ebpf-sensor/sensor-kubernetes"},"standard Kubernetes installation instructions"),"."),(0,o.kt)("h2",{id:"docker-driver"},"Docker driver"),(0,o.kt)("p",null,"Since the eBPF Sensor needs access to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/proc")," folder on the host, there are additional steps to ensure that the directory is mounted correctly inside the Sensor container for running it in minikube with the Docker driver."),(0,o.kt)("p",null,"First, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"minikube mount /proc:/ggproc\n")),(0,o.kt)("p",null,"Then, in a new terminal window, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'helm repo add levoai https://charts.levo.ai && helm repo update levoai\nhelm pull levoai/levoai-ebpf-sensor --untar\ncd levoai-ebpf-sensor/\nsed -i "s/path: \\/proc/path: \\/ggproc/" templates/deployment.yaml\nhelm upgrade --install levoai-sensor . -n levoai\n')))}m.isMDXComponent=!0}}]);