"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2453],{8281:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return k}});var s=t(3117),o=t(102),a=(t(7294),t(3905)),r=t(7808),i=t(6066),l=["components"],c={sidebar_position:3,title:"Install eBPF Sensor on Docker | Levo.ai Documentation"},p="Sensor via Docker",u={unversionedId:"install-traffic-capture-sensors/ebpf-sensor/sensor-docker",id:"install-traffic-capture-sensors/ebpf-sensor/sensor-docker",title:"Install eBPF Sensor on Docker | Levo.ai Documentation",description:"Install on Linux host via Docker",source:"@site/docs/install-traffic-capture-sensors/ebpf-sensor/sensor-docker.md",sourceDirName:"install-traffic-capture-sensors/ebpf-sensor",slug:"/install-traffic-capture-sensors/ebpf-sensor/sensor-docker",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-docker",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/install-traffic-capture-sensors/ebpf-sensor/sensor-docker.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Install eBPF Sensor on Docker | Levo.ai Documentation"},sidebar:"tutorialSidebar",previous:{title:"Sensor on AWS ECS using Terraform",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-aws-ecs-terraform"},next:{title:"Sensor via APT Package",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package"}},d={},k=[{value:"Install on Linux host via Docker",id:"install-on-linux-host-via-docker",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"1. Install Sensor",id:"1-install-sensor",level:3},{value:"NOTE:",id:"note",level:4},{value:"2. Verify connectivity with Satellite",id:"2-verify-connectivity-with-satellite",level:3},{value:"<br></br>",id:"brbr",level:2},{value:"Sensor Lifecycle Management",id:"sensor-lifecycle-management",level:2},{value:"Uninstall Sensor",id:"uninstall-sensor",level:3},{value:"Get Sensor Logs",id:"get-sensor-logs",level:3},{value:"Upgrade Sensor",id:"upgrade-sensor",level:3},{value:"Manage Sensor Configuration",id:"manage-sensor-configuration",level:3}],f={toc:k};function h(e){var n=e.components,t=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,s.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sensor-via-docker"},"Sensor via Docker"),(0,a.kt)("h2",{id:"install-on-linux-host-via-docker"},"Install on Linux host via Docker"),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Docker Engine version ",(0,a.kt)("inlineCode",{parentName:"li"},"18.03.0")," and above"),(0,a.kt)("li",{parentName:"ul"},"Admin (or ",(0,a.kt)("inlineCode",{parentName:"li"},"sudo"),") privileges on the Docker host")),(0,a.kt)("h3",{id:"1-install-sensor"},"1. Install Sensor"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"If you are installing the Satellite and Sensor on the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"same"))," Linux host, please do ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"NOT"))," use ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost")," as the satellite-address below. Use ",(0,a.kt)("inlineCode",{parentName:"p"},"host.docker.internal"),", or the Linux host's ",(0,a.kt)("inlineCode",{parentName:"p"},"IP address")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"domain name")," instead. This is required as the Sensor runs inside a Docker container, and ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost")," resolves to the Sensor container's IP address, instead of the Linux host.")),(0,a.kt)(i.Z,{language:"bash",mdxType:"CodeBlock"},"\n# Replace '<satellite-address>' with the values you noted down from the Satellite install\n#\n# Specify below the 'Application Name' chosen earlier. Do not quote the 'Application Name'\n#\nsudo docker run --restart unless-stopped   -v /sys/kernel/debug:/sys/kernel/debug -v /proc:/host/proc   --add-host host.docker.internal:host-gateway   --privileged --detach levoai/ebpf_sensor:"+r.z+"   --host-proc-path /host/proc/   --satellite-url <satellite-address>   --organization-id <Org ID>   --env <'application-environment'> "),(0,a.kt)("h4",{id:"note"},"NOTE:"),(0,a.kt)("p",null,"The default address for the collector in Docker-based Sensor installations is ",(0,a.kt)("inlineCode",{parentName:"p"},"https://collector.levo.ai"),".\nThis address assumes that Levo is hosting the Satellite for you, and you must also specify an organization ID when starting the sensor (with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--organization-id")," flag).\nIf you wish, you may also host the Satellite yourself and specify the address of the collector in the self-hosted Satellite to direct the Sensor's traffic to it."),(0,a.kt)("h3",{id:"2-verify-connectivity-with-satellite"},"2. Verify connectivity with Satellite"),(0,a.kt)("p",null,"Execute the following command to check for connectivity health:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Please specify the actual container name for levoai-sensor below\ndocker logs <levoai-sensor container name> | grep "Initial connection with Collector"\n')),(0,a.kt)("p",null,"If connectivity is healthy, you should see output similar to below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"2022/06/13 21:15:40 729071  INFO [ebpf_sensor.cpp->main:120]    Initial connection with Collector was successful.\n")),(0,a.kt)("p",null,"Please proceed to the next step, if there are no errors."),(0,a.kt)("h2",{id:"brbr"},(0,a.kt)("br",null)),(0,a.kt)("h2",{id:"sensor-lifecycle-management"},"Sensor Lifecycle Management"),(0,a.kt)("h3",{id:"uninstall-sensor"},"Uninstall Sensor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Get the container id of the Sensor\ndocker ps | grep "levoai/ebpf_sensor"\n\n# Remove the Sensor\ndocker rm -f <container id from docker ps step above>\n')),(0,a.kt)("h3",{id:"get-sensor-logs"},"Get Sensor Logs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Get the container id of the Sensor\ndocker ps | grep "levoai/ebpf_sensor"\n\nsudo docker logs <container id from docker ps step above>\n')),(0,a.kt)("h3",{id:"upgrade-sensor"},"Upgrade Sensor"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Uninstall Sensor"),(0,a.kt)("li",{parentName:"ul"},"Pull new Sensor image")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull levoai/ebpf_sensor:latest\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Reinstall Sensor")),(0,a.kt)("h3",{id:"manage-sensor-configuration"},"Manage Sensor Configuration"),(0,a.kt)("p",null,"Please refer to ",(0,a.kt)("a",{parentName:"p",href:"/install-traffic-capture-sensors/ebpf-sensor/common-tasks/sensor-configuration"},"Sensor Configuration"),", and ",(0,a.kt)("a",{parentName:"p",href:"/install-traffic-capture-sensors/ebpf-sensor/common-tasks/sensor-configuration#running-via-docker"},"Applying Configuration Changes"),"."))}h.isMDXComponent=!0},7808:function(e){e.exports=JSON.parse('{"z":"0.48.2","q":"0.2.1"}')}}]);