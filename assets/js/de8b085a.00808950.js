"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2354],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return r?a.createElement(f,o(o({ref:t},u),{},{components:r})):a.createElement(f,o({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var l=2;l<i;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2896:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return c}});var a=r(3117),n=r(102),i=(r(7294),r(3905)),o=["components"],p={sidebar_position:2},s="Data Driven Security Tests - Part 2",l={unversionedId:"test-your-app/test-app-security/data-driven/data-driven-2",id:"test-your-app/test-app-security/data-driven/data-driven-2",title:"Data Driven Security Tests - Part 2",description:"3. Generate a security test plan for your APIs",source:"@site/docs/test-your-app/test-app-security/data-driven/data-driven-2.md",sourceDirName:"test-your-app/test-app-security/data-driven",slug:"/test-your-app/test-app-security/data-driven/data-driven-2",permalink:"/test-your-app/test-app-security/data-driven/data-driven-2",editUrl:"https://github.com/levoai/docs/edit/main/docs/test-your-app/test-app-security/data-driven/data-driven-2.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Data Driven Security Tests - Part 1",permalink:"/test-your-app/test-app-security/data-driven/data-driven-1"},next:{title:"Data Driven Security Tests - Part 3",permalink:"/test-your-app/test-app-security/data-driven/data-driven-3"}},u={},c=[{value:"3. Generate a security test plan for your APIs",id:"3-generate-a-security-test-plan-for-your-apis",level:2}],d={toc:c};function m(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"data-driven-security-tests---part-2"},"Data Driven Security Tests - Part 2"),(0,i.kt)("h2",{id:"3-generate-a-security-test-plan-for-your-apis"},"3. Generate a security test plan for your APIs"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click on ",(0,i.kt)("inlineCode",{parentName:"p"},"Test Plans")," in the side panel and proceed to create a test plan by clicking ",(0,i.kt)("inlineCode",{parentName:"p"},"New Test Plan"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Pick ",(0,i.kt)("inlineCode",{parentName:"p"},"Data Driven")," as the type of test plan to generate.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"New Test Plan")," dialog pick a suitable name for the plan. ")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Pick the previously imported API catalog as the API asset for this test plan.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If your API specification has ",(0,i.kt)("a",{parentName:"p",href:"https://swagger.io/docs/specification/adding-examples/"},"example values"),", and these example values will work with your live API endpoints, then check the check box named ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Auto-populate API parameters for this test plan")),"."),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"This uses examples in the OpenAPI specification file to auto populate ",(0,i.kt)("a",{parentName:"p",href:"/concepts/test-plans/fixtures/test-fixtures"},"test fixtures/API parameters")," that are required in the generated test plan.\nThe example values are used in making API requests during test execution."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Proceed to generate the test plan. The generated test plan will have coverage for several security vulnerabilities.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Depending on if you used ",(0,i.kt)("inlineCode",{parentName:"p"},"Auto-populate API parameters for this test plan"),", in the previous step, and how comprehensive the provided examples are, your newly generated test plan with either be in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Config Complete")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"Config in Progress")," states.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If your test plan is in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Config Complete")," state, it is immediately runnable, and you can proceed to ",(0,i.kt)("a",{parentName:"p",href:"/test-your-app/test-app-security/data-driven/data-driven-3#download-the-environmentyml-file"},"step 5"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If your test plan is in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Config in Progress")," state, you will need to configure values for API parameters using ",(0,i.kt)("a",{parentName:"p",href:"/concepts/test-plans/fixtures/test-fixtures"},"test fixtures"),".\nThe next section describes the processing of configuring API parameter values via fixtures."))))}m.isMDXComponent=!0}}]);