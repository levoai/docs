"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6269],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||c[f]||i;return n?r.createElement(m,p(p({ref:t},u),{},{components:n})):r.createElement(m,p({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,p=new Array(i);p[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var l=2;l<i;l++)p[l]=n[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8267:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),p=["components"],o={sidebar_position:3},s="Auto Generate Test Plan",l={unversionedId:"test-your-app/test-app-security/data-driven/generate-test-plan",id:"test-your-app/test-app-security/data-driven/generate-test-plan",title:"Auto Generate Test Plan",description:"1. Generate a security test plan for your APIs",source:"@site/docs/test-your-app/test-app-security/data-driven/generate-test-plan.md",sourceDirName:"test-your-app/test-app-security/data-driven",slug:"/test-your-app/test-app-security/data-driven/generate-test-plan",permalink:"/test-your-app/test-app-security/data-driven/generate-test-plan",editUrl:"https://github.com/levoai/docs/edit/main/docs/test-your-app/test-app-security/data-driven/generate-test-plan.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Import API Specifications",permalink:"/test-your-app/test-app-security/data-driven/import-apis"},next:{title:"Configure Test Plan Fixtures",permalink:"/test-your-app/test-app-security/data-driven/configure-plan-fixtures"}},u={},c=[{value:"1. Generate a security test plan for your APIs",id:"1-generate-a-security-test-plan-for-your-apis",level:2}],d={toc:c};function f(e){var t=e.components,o=(0,a.Z)(e,p);return(0,i.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"auto-generate-test-plan"},"Auto Generate Test Plan"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(1920).Z,width:"207",height:"40"})),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6766).Z,width:"1075",height:"405"})),(0,i.kt)("h2",{id:"1-generate-a-security-test-plan-for-your-apis"},"1. Generate a security test plan for your APIs"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click on ",(0,i.kt)("inlineCode",{parentName:"p"},"Test Plans")," in the side panel and proceed to create a test plan by clicking ",(0,i.kt)("inlineCode",{parentName:"p"},"New Test Plan"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Pick ",(0,i.kt)("inlineCode",{parentName:"p"},"Data Driven")," as the type of test plan to generate.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"New Test Plan")," dialog pick a suitable name for the plan. ")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Pick the previously imported API catalog as the API asset for this test plan.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If your API specification has ",(0,i.kt)("a",{parentName:"p",href:"https://swagger.io/docs/specification/adding-examples/"},"example values"),", and these example values will work with your live API endpoints, then check the check box named ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Auto-populate API parameters for this test plan")),"."),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"This uses examples in the OpenAPI specification file to auto populate ",(0,i.kt)("a",{parentName:"p",href:"/concepts/test-plans/fixtures/test-fixtures"},"test fixtures/API parameters")," that are required in the generated test plan.\nThe example values are used in making API requests during test execution."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Proceed to generate the test plan. The generated test plan will have coverage for several security vulnerabilities.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Depending on if you used ",(0,i.kt)("inlineCode",{parentName:"p"},"Auto-populate API parameters for this test plan"),", in the previous step, and how comprehensive the provided examples are, your newly generated test plan with either be in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Config Complete")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"Config in Progress")," states.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If your test plan is in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Config Complete")," state, it is immediately runnable, and you can proceed to ",(0,i.kt)("a",{parentName:"p",href:"/test-your-app/test-app-security/data-driven/configure-env-yml"},(0,i.kt)("strong",{parentName:"a"},"Configure environment.yml")),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If your test plan is in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Config in Progress")," state, you will need to configure values for API parameters using ",(0,i.kt)("a",{parentName:"p",href:"/concepts/test-plans/fixtures/test-fixtures"},"test fixtures"),".\nThe next section describes the processing of configuring API parameter values via fixtures."))))}f.isMDXComponent=!0},6766:function(e,t,n){t.Z=n.p+"assets/images/data-driven-flow-2-8c2400e036a0793fba559945c5a1bd2b.svg"},1920:function(e,t,n){t.Z=n.p+"assets/images/data-driven-test-plan-2bac0366423c95594a969719901fed4e.svg"}}]);