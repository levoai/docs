"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[909],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),h=a,f=d["".concat(s,".").concat(h)]||d[h]||c[h]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9689:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:3},s="CrAPI Sample App - Part II",p={unversionedId:"test-sample-app/crapi/crapi-part-2",id:"test-sample-app/crapi/crapi-part-2",isDocsHomePage:!1,title:"CrAPI Sample App - Part II",description:"The test plan created was auto configured as you selected Auto-populate API parameters for this test plan in the previous step.",source:"@site/docs/test-sample-app/crapi/crapi-part-2.md",sourceDirName:"test-sample-app/crapi",slug:"/test-sample-app/crapi/crapi-part-2",permalink:"/test-sample-app/crapi/crapi-part-2",editUrl:"https://github.com/levoai/docs/edit/main/docs/test-sample-app/crapi/crapi-part-2.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"CrAPI Sample App - Part I",permalink:"/test-sample-app/crapi/crapi-part-1"},next:{title:"FAQs",permalink:"/faqs"}},u=[{value:"Install Levo CLI &amp; Login",id:"install-levo-cli--login",children:[],level:2},{value:"Execute the test plan against crAPI",id:"execute-the-test-plan-against-crapi",children:[{value:"Prerequisites",id:"prerequisites",children:[],level:3}],level:2},{value:"View the test results in the <code>Test Runs</code> page",id:"view-the-test-results-in-the-test-runs-page",children:[],level:2},{value:"Verify results using crAPI&#39;s Hackpad (Optional)",id:"verify-results-using-crapis-hackpad-optional",children:[],level:2},{value:"Congratulations! You are done.",id:"congratulations-you-are-done",children:[],level:2}],c={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"crapi-sample-app---part-ii"},"CrAPI Sample App - Part II"),(0,i.kt)("p",null,"The test plan created was auto configured as you selected ",(0,i.kt)("inlineCode",{parentName:"p"},"Auto-populate API parameters for this test plan")," in the previous step."),(0,i.kt)("p",null,"Just like developers run tests using JUnit, & PyTest ",(0,i.kt)("inlineCode",{parentName:"p"},"fixtures"),", Levo's test plans use ",(0,i.kt)("a",{parentName:"p",href:"/concepts/test-fixtures"},"fixtures")," to drive tests. The fixtures provide seed values for API parameters required for the proper execution of the tests."),(0,i.kt)("p",null,"Levo used examples in the OpenAPI specification to auto populate these fixtures."),(0,i.kt)("h2",{id:"install-levo-cli--login"},"Install Levo CLI & Login"),(0,i.kt)("p",null,"Levo CLI is the test runner that will execute the test plan against your running instance of crAPI."),(0,i.kt)("p",null,"Follow the instructions ",(0,i.kt)("a",{parentName:"p",href:"/levo-cli/levo-cli-intro"},"here")," to install Levo CLI and authenticate it with Levo SaaS."),(0,i.kt)("p",null,"Skip this step if you have already completed it."),(0,i.kt)("h2",{id:"execute-the-test-plan-against-crapi"},"Execute the test plan against crAPI"),(0,i.kt)("p",null,"Now we will use the Levo CLI to execute the test plan."),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ensure you copied the ",(0,i.kt)("inlineCode",{parentName:"li"},"LRN (Levo Resource Name)")," to the clipboard in the previous step"),(0,i.kt)("li",{parentName:"ul"},"Ensure you downloaded the ",(0,i.kt)("inlineCode",{parentName:"li"},"environment.yml")," file from the test plan to your desktop"),(0,i.kt)("li",{parentName:"ul"},"Ensure the ",(0,i.kt)("inlineCode",{parentName:"li"},"environment.yml")," file is in the same directory from which you launch Levo CLI")),(0,i.kt)("p",null,"Execute the following in the shell where you installed Levo CLI:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# Use `host.docker.internal` instead of `localhost` or `127.0.0.1` if crAPI is running on your local machine.\n# Modify the --target-url value below if crAPI is running elsewhere.\n\nexport TEST_PLAN_LRN="<LRN value copied to your clipboard in previous steps>"\n\n# Execute security tests against crAPI \nlevo test --plan-lrn $TEST_PLAN_LRN --target-url http://host.docker.internal:8888 --env-file environment.yml\n')),(0,i.kt)("h2",{id:"view-the-test-results-in-the-test-runs-page"},"View the test results in the ",(0,i.kt)("inlineCode",{parentName:"h2"},"Test Runs")," page"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"In the Levo SaaS console side panel, click on ",(0,i.kt)("inlineCode",{parentName:"li"},"Test Runs")," and navigate to your most recent test run results"),(0,i.kt)("li",{parentName:"ol"},"You will notice that Levo has found failed test cases and an ",(0,i.kt)("a",{parentName:"li",href:"/issues/vulnerabilities/IDOR"},"Insecure Direct Object Reference (IDOR)")," vulnerability. Navigate to the IDOR test case status, and review the summary and the logs.")),(0,i.kt)("h2",{id:"verify-results-using-crapis-hackpad-optional"},"Verify results using crAPI's Hackpad (Optional)"),(0,i.kt)("p",null,"Inside ",(0,i.kt)("inlineCode",{parentName:"p"},"crAPI"),", use the top level menu to navigate to ",(0,i.kt)("inlineCode",{parentName:"p"},"Hackpad"),". Follow instructions in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Hackpad")," to verify if the IDOR finding reported by Levo is a true positive."),(0,i.kt)("h2",{id:"congratulations-you-are-done"},"Congratulations! You are done."))}d.isMDXComponent=!0}}]);