"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7935],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),f=c(n),d=a,m=f["".concat(p,".").concat(d)]||f[d]||u[d]||s;return n?r.createElement(m,o(o({ref:t},l),{},{components:n})):r.createElement(m,o({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},618:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return f}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),o=["components"],i={sidebar_position:1},p="Test Plans",c={unversionedId:"concepts/test-plans/test-plans",id:"concepts/test-plans/test-plans",isDocsHomePage:!1,title:"Test Plans",description:"Autogenerated Test Plans are tailor-made for each API (and it's associated endpoints).",source:"@site/docs/concepts/test-plans/test-plans.md",sourceDirName:"concepts/test-plans",slug:"/concepts/test-plans/test-plans",permalink:"/concepts/test-plans/test-plans",editUrl:"https://github.com/levoai/docs/edit/main/docs/concepts/test-plans/test-plans.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Metadata.yml file",permalink:"/concepts/api-catalog/metadata-yml"},next:{title:"Test Plan Types",permalink:"/concepts/test-plans/test-plan-types"}},l=[],u={toc:l};function f(e){var t=e.components,i=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"test-plans"},"Test Plans"),(0,s.kt)("p",null,"Autogenerated ",(0,s.kt)("inlineCode",{parentName:"p"},"Test Plans")," are tailor-made for each API (and it's associated endpoints)."),(0,s.kt)("p",null,(0,s.kt)("img",{src:n(3384).Z})),(0,s.kt)("p",null,"Test Plans can be generated for APIs present in either the ",(0,s.kt)("inlineCode",{parentName:"p"},"Application")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"Service")," (API Catalog) groupings."),(0,s.kt)("p",null,"A Test Plan is structured as show below.\n",(0,s.kt)("img",{src:n(6651).Z})),(0,s.kt)("p",null,"A Test plan is comprised of ",(0,s.kt)("inlineCode",{parentName:"p"},"Test Suites"),". A Test Suite is focussed on a single API endpoint, and comprises of a set of ",(0,s.kt)("inlineCode",{parentName:"p"},"Test Cases"),"."),(0,s.kt)("p",null,"A ",(0,s.kt)("inlineCode",{parentName:"p"},"Test Case")," has a singular objective, and tests the specific API endpoint for a specific vulnerability. For example, test the API endpoint for a ",(0,s.kt)("a",{parentName:"p",href:"/vulnerabilities/v1/OWASP-WEB-10/A10-SSRF"},"SSRF")," vulnerability, or an authorization bypass vulnerability."))}f.isMDXComponent=!0},6651:function(e,t,n){t.Z=n.p+"assets/images/test-plan-structure-1-cd9364d2f1ec78ddfda647b29b3116b6.png"},3384:function(e,t,n){t.Z=n.p+"assets/images/test-plans-54903b38946e87f1892a8445cccf1e3b.png"}}]);