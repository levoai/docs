"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3095],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),f=l(r),m=a,y=f["".concat(s,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(y,i(i({ref:t},c),{},{components:r})):n.createElement(y,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3236:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return f}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],p={sidebar_position:3},s="Auto Generate Test Plan",l={unversionedId:"test-your-app/test-app-security/zero-conf/generate-test-plan",id:"test-your-app/test-app-security/zero-conf/generate-test-plan",isDocsHomePage:!1,title:"Auto Generate Test Plan",description:"1. Generate a security test plan for your APIs",source:"@site/docs/test-your-app/test-app-security/zero-conf/generate-test-plan.md",sourceDirName:"test-your-app/test-app-security/zero-conf",slug:"/test-your-app/test-app-security/zero-conf/generate-test-plan",permalink:"/test-your-app/test-app-security/zero-conf/generate-test-plan",editUrl:"https://github.com/levoai/docs/edit/main/docs/test-your-app/test-app-security/zero-conf/generate-test-plan.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Import API Specifications",permalink:"/test-your-app/test-app-security/zero-conf/import-apis"},next:{title:"Configure `environment.yml`",permalink:"/test-your-app/test-app-security/zero-conf/configure-env-yml"}},c=[{value:"1. Generate a security test plan for your APIs",id:"1-generate-a-security-test-plan-for-your-apis",children:[],level:2}],u={toc:c};function f(e){var t=e.components,p=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,p,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"auto-generate-test-plan"},"Auto Generate Test Plan"),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(8265).Z})),(0,o.kt)("h2",{id:"1-generate-a-security-test-plan-for-your-apis"},"1. Generate a security test plan for your APIs"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click on ",(0,o.kt)("inlineCode",{parentName:"p"},"Test Plans")," in the side panel and proceed to create a test plan by clicking ",(0,o.kt)("inlineCode",{parentName:"p"},"New Test Plan"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Pick ",(0,o.kt)("inlineCode",{parentName:"p"},"Zero Config")," as the type of test plan to generate ")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"New Test Plan")," dialog pick a suitable name for the plan. ")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Pick the previously imported API catalog as the API asset for this test plan.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Proceed to generate the test plan. The generated test plan will have coverage for several security vulnerabilities."),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"Zero Config Test Plans do not support horizontal authorization bypass (",(0,o.kt)("a",{parentName:"p",href:"/vulnerabilities/v1/OWASP-API-10/A1-BOLA"},"BOLA"),") tests. If you skipped providing RBAC association info via the metadata.yml file, no tests for vertical authorization bypass (",(0,o.kt)("a",{parentName:"p",href:"/vulnerabilities/v1/OWASP-API-10/A5-BFLA"},"BFLA"),") will be generated."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Your new test plan will be in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Config Complete")," state, and is immediately runnable. Please proceed to the next step."))))}f.isMDXComponent=!0},8265:function(e,t,r){t.Z=r.p+"assets/images/zero-conf-flow-2-5da502ec8d8625eaefb195ec76390487.svg"}}]);