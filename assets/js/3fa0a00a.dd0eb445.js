"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[184],{3905:function(e,t,r){r.d(t,{Zo:function(){return f},kt:function(){return u}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},f=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),d=c(r),u=a,m=d["".concat(s,".").concat(u)]||d[u]||p[u]||i;return r?n.createElement(m,o(o({ref:t},f),{},{components:r})):n.createElement(m,o({ref:t},f))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1522:function(e,t,r){r.r(t),r.d(t,{assets:function(){return f},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),o=["components"],l={sidebar_position:3},s="API Traffic Capture Filters",c={unversionedId:"beta/api-observability/common-tasks/sensor/filter-traffic",id:"beta/api-observability/common-tasks/sensor/filter-traffic",title:"API Traffic Capture Filters",description:"The Sensor allows capturing API (HTTP) traffic based on filter (include/exclude) criteria. These filters are specified in a configuration file. Please refer to Sensor Configuration for high level structure of the file.",source:"@site/docs/beta/api-observability/common-tasks/sensor/filter-traffic.md",sourceDirName:"beta/api-observability/common-tasks/sensor",slug:"/beta/api-observability/common-tasks/sensor/filter-traffic",permalink:"/beta/api-observability/common-tasks/sensor/filter-traffic",editUrl:"https://github.com/levoai/docs/edit/main/docs/beta/api-observability/common-tasks/sensor/filter-traffic.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Manage Sensor Configuration",permalink:"/beta/api-observability/common-tasks/sensor/sensor-configuration"},next:{title:"Sensor Troubleshooting",permalink:"/beta/api-observability/common-tasks/sensor/sensor-troubleshoot"}},f={},p=[{value:"Default Excluded Ports",id:"default-excluded-ports",level:2},{value:"Configure IP Filters",id:"configure-ip-filters",level:2},{value:"Exclude All Traffic",id:"exclude-all-traffic",level:3},{value:"Exclude Specific Ports/Port Ranges",id:"exclude-specific-portsport-ranges",level:3},{value:"Exclude Specific Host Ports/Port Ranges",id:"exclude-specific-host-portsport-ranges",level:4},{value:"Exclude Specific Peer Ports/Port Ranges",id:"exclude-specific-peer-portsport-ranges",level:4},{value:"Include Specific Ports/Port Ranges",id:"include-specific-portsport-ranges",level:3},{value:"Include Specific Host Ports/Port Ranges",id:"include-specific-host-portsport-ranges",level:4},{value:"Include Specific Peer Ports/Port Ranges",id:"include-specific-peer-portsport-ranges",level:4},{value:"Exclude Specific IP Addresses",id:"exclude-specific-ip-addresses",level:3},{value:"Exclude Specific HOST IP Addresses",id:"exclude-specific-host-ip-addresses",level:4},{value:"Exclude Specific Peer IP Addresses",id:"exclude-specific-peer-ip-addresses",level:4},{value:"Include Specific IP Addresses",id:"include-specific-ip-addresses",level:3},{value:"Include Specific HOST IP Addresses",id:"include-specific-host-ip-addresses",level:4},{value:"Exclude Specific Peer IP Addresses",id:"exclude-specific-peer-ip-addresses-1",level:4},{value:"Exclude IP Subnets",id:"exclude-ip-subnets",level:3},{value:"Exclude IP Subnets - CIDR Notation",id:"exclude-ip-subnets---cidr-notation",level:4},{value:"Exclude IP Subnets - Prefix Notation",id:"exclude-ip-subnets---prefix-notation",level:4},{value:"Include IP Subnets",id:"include-ip-subnets",level:3},{value:"Include IP Subnets - CIDR Notation",id:"include-ip-subnets---cidr-notation",level:4},{value:"Include IP Subnets - Prefix Notation",id:"include-ip-subnets---prefix-notation",level:4},{value:"Capture Traffic for Specific Processes",id:"capture-traffic-for-specific-processes",level:3},{value:"Capture Traffic by Command Name",id:"capture-traffic-by-command-name",level:4},{value:"Capture Traffic by PID",id:"capture-traffic-by-pid",level:4}],d={toc:p};function u(e){var t=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"api-traffic-capture-filters"},"API Traffic Capture Filters"),(0,i.kt)("p",null,"The Sensor allows capturing API (HTTP) traffic based on filter (include/exclude) criteria. These filters are specified in a configuration file. Please refer to ",(0,i.kt)("a",{parentName:"p",href:"/beta/api-observability/common-tasks/sensor/sensor-configuration"},"Sensor Configuration")," for high level structure of the file."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#default-excluded-ports"},"Default Excluded Ports")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configure-ip-filters"},"Configure IP Filters"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#exclude-all-traffic"},"Exclude All Traffic")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#exclude-specific-portsport-ranges"},"Exclude Specific Ports/Port Ranges")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#include-specific-portsport-ranges"},"Include Specific Ports/Port Ranges")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#exclude-specific-ip-addresses"},"Exclude Specific IP Addresses")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#include-specific-ip-addresses"},"Include Specific IP Addresses")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#exclude-ip-subnets"},"Exclude IP Subnets")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#include-ip-subnets"},"Include IP Subnets")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#capture-traffic-for-specific-processes"},"Capture Traffic for Specific Processes"))))),(0,i.kt)("br",null),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"default-excluded-ports"},"Default Excluded Ports"),(0,i.kt)("p",null,"The Sensor excludes capturing traffic from the below ports (TCP & UDP) by default."),(0,i.kt)("p",null,"If your API Traffic (HTTP) uses one of these ports, please see section below on how the port can be included for capture. "),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Standard Protocol"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Port"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"DNS"),(0,i.kt)("td",{parentName:"tr",align:"left"},"53")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"etcd"),(0,i.kt)("td",{parentName:"tr",align:"left"},"2379-2380")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Kafka"),(0,i.kt)("td",{parentName:"tr",align:"left"},"9092-9093")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"mongodb"),(0,i.kt)("td",{parentName:"tr",align:"left"},"27017-27019, 28017")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"SQL Server"),(0,i.kt)("td",{parentName:"tr",align:"left"},"135, 4022, 1433-1434")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"MySQL"),(0,i.kt)("td",{parentName:"tr",align:"left"},"3306, 33060-33062")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgress"),(0,i.kt)("td",{parentName:"tr",align:"left"},"5432-5433")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"RabbitMQ"),(0,i.kt)("td",{parentName:"tr",align:"left"},"5671-5672, 15672-15675, 25672, 35672-35682, 61613-61614")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Redis"),(0,i.kt)("td",{parentName:"tr",align:"left"},"6379")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"ZooKeeper"),(0,i.kt)("td",{parentName:"tr",align:"left"},"2181, 3888, 3888")))),(0,i.kt)("br",null),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"configure-ip-filters"},"Configure IP Filters"),(0,i.kt)("p",null,"The below sections describe common filtering scenarios with examples. In all cases the examples show the relevant snippet of the configuration file. Adapt these examples to the ",(0,i.kt)("a",{target:"_blank",href:r(2749).Z},"Helm Values config file"),", if running on Kubernetes."),(0,i.kt)("h3",{id:"exclude-all-traffic"},"Exclude All Traffic"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: drop # Default policy is to drop all traffic\n")),(0,i.kt)("h3",{id:"exclude-specific-portsport-ranges"},"Exclude Specific Ports/Port Ranges"),(0,i.kt)("h4",{id:"exclude-specific-host-portsport-ranges"},"Exclude Specific Host Ports/Port Ranges"),(0,i.kt)("p",null,"Host Port is the server listening port, where client/peer connections are accepted."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: accept # Default policy is to capture all traffic\n  entries: # Specific 'entries' can override the default policy\n    ### Host Ports ###\n    # Host Port is the server listening port, where client connections are accepted\n    - policy: drop\n      host-ports: 53 # DNS\n    - policy: drop\n      host-ports: 2379-2380 # etcd\n")),(0,i.kt)("h4",{id:"exclude-specific-peer-portsport-ranges"},"Exclude Specific Peer Ports/Port Ranges"),(0,i.kt)("p",null,"Peer Port is a client port used in communication with the server listening port."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: accept # Default policy is to capture all traffic\n  entries: # Specific 'entries' can override the default policy\n### Peer Ports ###\n    # Peer Port is the client port used in communication with the server listening port\n    - policy: drop\n      peer-ports: 9000\n    - policy: drop\n      peer-ports: 25000-29000 \n")),(0,i.kt)("h3",{id:"include-specific-portsport-ranges"},"Include Specific Ports/Port Ranges"),(0,i.kt)("h4",{id:"include-specific-host-portsport-ranges"},"Include Specific Host Ports/Port Ranges"),(0,i.kt)("p",null,"Host Port is the server listening port, where client/peer connections are accepted."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: drop # Drop all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n    ### Host Ports ###\n    # Host Port is the server listening port, where client connections are accepted\n    - policy: accept\n      host-ports: 9000\n    - policy: accept\n      host-ports: 23000-28000\n")),(0,i.kt)("h4",{id:"include-specific-peer-portsport-ranges"},"Include Specific Peer Ports/Port Ranges"),(0,i.kt)("p",null,"Peer Port is a client port used in communication with the server listening port."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: drop # Drop all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n### Peer Ports ###\n    # Peer Port is the client port used in communication with the server listening port\n    - policy: accept\n      peer-ports: 9000\n    - policy: accept\n      peer-ports: 25000-29000 \n")),(0,i.kt)("h3",{id:"exclude-specific-ip-addresses"},"Exclude Specific IP Addresses"),(0,i.kt)("h4",{id:"exclude-specific-host-ip-addresses"},"Exclude Specific HOST IP Addresses"),(0,i.kt)("p",null,"Host implies the binding IP addresses of the Server servicing the API endpoints."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: accept # Accept all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n    - host-network: 10.98.76.53 # Drop all traffic to/from 10.98.76.53\n      policy: drop\n    - host-network: 10.99.76.53 # Drop all traffic to/from 10.99.76.53\n      policy: drop\n")),(0,i.kt)("h4",{id:"exclude-specific-peer-ip-addresses"},"Exclude Specific Peer IP Addresses"),(0,i.kt)("p",null,"Peer implies the IP addresses of clients connecting to the Server/Host servicing the API endpoints."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: accept # Accept all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n    - peer-network: 10.98.76.53 # Drop all traffic to/from 10.98.76.53\n      policy: drop\n    - peer-network: 10.99.76.53 # Drop all traffic to/from 10.99.76.53\n      policy: drop\n")),(0,i.kt)("h3",{id:"include-specific-ip-addresses"},"Include Specific IP Addresses"),(0,i.kt)("h4",{id:"include-specific-host-ip-addresses"},"Include Specific HOST IP Addresses"),(0,i.kt)("p",null,"Host implies the binding IP addresses of the Server servicing the API endpoints."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: drop # Drop all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n    - host-network: 10.98.76.53 # Accept all traffic to/from 10.98.76.53\n      policy: accept\n    - host-network: 10.99.76.53 # Accept all traffic to/from 10.99.76.53\n      policy: accept\n")),(0,i.kt)("h4",{id:"exclude-specific-peer-ip-addresses-1"},"Exclude Specific Peer IP Addresses"),(0,i.kt)("p",null,"Peer implies the IP addresses of clients connecting to the Server/Host servicing the API endpoints."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: drop # Drop all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n    - peer-network: 10.98.76.53 # Drop all traffic to/from 10.98.76.53\n      policy: accept\n    - peer-network: 10.99.76.53 # Drop all traffic to/from 10.99.76.53\n      policy: accept\n")),(0,i.kt)("h3",{id:"exclude-ip-subnets"},"Exclude IP Subnets"),(0,i.kt)("p",null,"Entire classes of subnets can be excluded using either the CIDR or prefix notations.\nThe examples below are for ",(0,i.kt)("inlineCode",{parentName:"p"},"host-network")," subnets. The same technique is applicable for ",(0,i.kt)("inlineCode",{parentName:"p"},"peer-network")," subnets."),(0,i.kt)("h4",{id:"exclude-ip-subnets---cidr-notation"},"Exclude IP Subnets - CIDR Notation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: accept # Accept all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n    - host-network: 1.2.3.4/255.255.255.252 # Drop all from/to this host CIDR block\n      policy: drop\n")),(0,i.kt)("h4",{id:"exclude-ip-subnets---prefix-notation"},"Exclude IP Subnets - Prefix Notation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: accept # Accept all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n    - host-network: 1.2.3.4/30 # Drop all from/to this host subnet block\n      policy: drop\n")),(0,i.kt)("h3",{id:"include-ip-subnets"},"Include IP Subnets"),(0,i.kt)("p",null,"Entire classes of subnets can be included using either the CIDR or prefix notations.\nThe examples below are for ",(0,i.kt)("inlineCode",{parentName:"p"},"host-network")," subnets. The same technique is applicable for ",(0,i.kt)("inlineCode",{parentName:"p"},"peer-network")," subnets."),(0,i.kt)("h4",{id:"include-ip-subnets---cidr-notation"},"Include IP Subnets - CIDR Notation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: drop # Drop all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n    - host-network: 1.2.3.4/255.255.255.252 # Accept all to/from this host CIDR block\n      policy: accept\n")),(0,i.kt)("h4",{id:"include-ip-subnets---prefix-notation"},"Include IP Subnets - Prefix Notation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: drop # Drop all traffic except ones below\n  entries: # Specific 'entries' can override the default policy\n    - host-network: 1.2.3.4/30 # Accept all to/from this host subnet block\n      policy: accept\n")),(0,i.kt)("h3",{id:"capture-traffic-for-specific-processes"},"Capture Traffic for Specific Processes"),(0,i.kt)("p",null,"Traffic can be captured ONLY for specific processes, by specifying either their command name or PID."),(0,i.kt)("h4",{id:"capture-traffic-by-command-name"},"Capture Traffic by Command Name"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# Process Filters: process command names/IDs to monitor & capture API traffic.\n# --------------------------------------------------------------------------------------------\n# Uncomment and modify appropriately to limit capture to specific process names or IDs.\n# Both monitored-commands and monitored-pids support list of names & IDs respectively.\n# NOTE: monitored-commands and monitored-pids settings are mutually exclusive\n\n# Capture traffic from/to nginx & python3\nmonitored-commands:\n  - nginx\n  - python3\n\n# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: accept # Default policy is to capture all traffic\n")),(0,i.kt)("h4",{id:"capture-traffic-by-pid"},"Capture Traffic by PID"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# Process Filters: process command names/IDs to monitor & capture API traffic.\n# --------------------------------------------------------------------------------------------\n# Uncomment and modify appropriately to limit capture to specific process names or IDs.\n# Both monitored-commands and monitored-pids support list of names & IDs respectively.\n# NOTE: monitored-commands and monitored-pids settings are mutually exclusive\n\n# Capture traffic from/to PIDs 123 & 45.\nmonitored-pids:\n  - 123\n  - 45\n\n# --------------------------------------------------------------------------------------------\n# IP Filters: IP/Port/Network address based granular filtering of API traffic.\n# --------------------------------------------------------------------------------------------\n# IP Filters enable granular capture of API traffic based on various criteria.\n# Default values ignore traffic from standard ports that normally do not care HTTP traffic.\n# Refer to documentation on how these can be customized to suit your environment.\nip-filter-list:\n  default-policy: accept # Default policy is to capture all traffic\n")))}u.isMDXComponent=!0},2749:function(e,t,r){t.Z=r.p+"assets/files/config-values-945c5b4729cad7c72e96ef563345c7fb.yml"}}]);