"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5979],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),g=o,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||r;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4524:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var a=n(3117),o=n(102),r=(n(7294),n(3905)),i=["components"],l={sidebar_position:6},s="AWS API Gateway",u={unversionedId:"install-traffic-capture-sensors/aws-api-gateway",id:"install-traffic-capture-sensors/aws-api-gateway",title:"AWS API Gateway",description:"Logs-based Instrumentation",source:"@site/docs/install-traffic-capture-sensors/aws-api-gateway.md",sourceDirName:"install-traffic-capture-sensors",slug:"/install-traffic-capture-sensors/aws-api-gateway",permalink:"/install-traffic-capture-sensors/aws-api-gateway",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/install-traffic-capture-sensors/aws-api-gateway.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"AWS Traffic Mirroring",permalink:"/install-traffic-capture-sensors/aws-traffic-mirroring"},next:{title:"Azure API Management",permalink:"/install-traffic-capture-sensors/azure-api-management"}},c={},p=[{value:"Logs-based Instrumentation",id:"logs-based-instrumentation",level:2},{value:"Tailing Logs with CloudWatch",id:"tailing-logs-with-cloudwatch",level:3},{value:"Streaming Logs with CloudWatch and Amazon Data Firehose",id:"streaming-logs-with-cloudwatch-and-amazon-data-firehose",level:3},{value:"CloudFront Lambda@Edge Instrumentation",id:"cloudfront-lambdaedge-instrumentation",level:2}],d={toc:p};function g(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"aws-api-gateway"},"AWS API Gateway"),(0,r.kt)("h2",{id:"logs-based-instrumentation"},"Logs-based Instrumentation"),(0,r.kt)("h3",{id:"tailing-logs-with-cloudwatch"},"Tailing Logs with CloudWatch"),(0,r.kt)("p",null,"You may use CloudWatch Logs to instrument your AWS API Gateway endpoints."),(0,r.kt)("p",null,"The following script has been provided as an example to help you configure logging for your API Gateway endpoints."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/install-log-parsing-sensors"},"Levo's Log Parser")," can be configured to parse the logs and send them to Levo."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/usr/bin/env bash\n\nlog_group_name=levo/api-gateway-logs\n\naws logs create-log-group --log-group-name $log_group_name\naws logs put-retention-policy --log-group-name $log_group_name --retention-in-days 7\n\nlog_group_arn=$(aws logs describe-log-groups --log-group-name-prefix $log_group_name --query \'logGroups[0].arn\' --output text)\n\naws apigatewayv2 update-stage --api-id \'your-apigateway-api-id\' --stage-name \'$default\' --access-log-settings "DestinationArn=$log_group_arn,"\'Format="{\\"host\\":\\"$context.domainName\\",\\"method\\":\\"$context.httpMethod\\",\\"path\\":\\"$context.path\\",\\"agent\\":\\"$context.identity.userAgent\\",\\"code\\":\\"$context.status\\",\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"requestTime\\":\\"$context.requestTime\\",\\"routeKey\\":\\"$context.routeKey\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}"\'\n\naws logs tail --follow $log_group_name\n')),(0,r.kt)("h3",{id:"streaming-logs-with-cloudwatch-and-amazon-data-firehose"},"Streaming Logs with CloudWatch and Amazon Data Firehose"),(0,r.kt)("p",null,"You may also use Amazon Data Firehose to stream live access logs to Levo's satellite."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Configure a CloudWatch log group for APIs in API Gateway (using the above example script)"),(0,r.kt)("li",{parentName:"ol"},"Create a Firehose stream to send incoming events to a publicly accessible satellite endpoint by following these steps:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Go to the AWS Data Firehose Service in the AWS Console."),(0,r.kt)("li",{parentName:"ul"},"Click on Create Firehose stream."),(0,r.kt)("li",{parentName:"ul"},"In Source, choose ",(0,r.kt)("inlineCode",{parentName:"li"},"Direct PUT")," from the dropdown, and in the Destination, choose ",(0,r.kt)("inlineCode",{parentName:"li"},"HTTP Endpoint"),"."),(0,r.kt)("li",{parentName:"ul"},"In HTTP endpoint URL under Destination, put the satellite's publically accessible endpoint and click on Create Firehose Stream to complete the process."))),(0,r.kt)("li",{parentName:"ol"},"Connect the CloudWatch log group to the Firehose stream",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Open the earlier created log group in AWS CloudWatch."),(0,r.kt)("li",{parentName:"ul"},"Go to Subscription Filters and click on Create."),(0,r.kt)("li",{parentName:"ul"},"Choose ",(0,r.kt)("inlineCode",{parentName:"li"},"Create Amazon Data Firehose subscription filter")," and select the particular Amazon Data Firehose stream."),(0,r.kt)("li",{parentName:"ul"},"Click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Start Streaming")," and you can now see your traffic come up in our Application.")))),(0,r.kt)("p",null,"Please contact ",(0,r.kt)("inlineCode",{parentName:"p"},"support@levo.ai")," if you are interested in this setup."),(0,r.kt)("h2",{id:"cloudfront-lambdaedge-instrumentation"},"CloudFront Lambda@Edge Instrumentation"),(0,r.kt)("p",null,"You may configure AWS CloudFront with your API Gateway endpoints as the origin, and use Lambda@Edge functions to intercept and capture traffic."),(0,r.kt)("p",null,"Please visit the following links for more information"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://repost.aws/knowledge-center/api-gateway-cloudfront-distribution"},"Setting up API Gateway with a CloudFront distribution")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/install-traffic-capture-sensors/aws-cloudfront"},"Setting up Levo's CloudFront Lambda@Edge Functions"))))}g.isMDXComponent=!0}}]);