"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[365],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5059:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],s={sidebar_position:5},p="Key Concepts",l={unversionedId:"concepts",id:"concepts",isDocsHomePage:!1,title:"Key Concepts",description:"Levo is purpose built for modern development teams, and developers.",source:"@site/docs/concepts.md",sourceDirName:".",slug:"/concepts",permalink:"/concepts",editUrl:"https://github.com/levoai/docs/edit/main/docs/concepts.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"How do I evaluate Levo?",permalink:"/trying-levo"},next:{title:"How do I use Levo with my own applications?",permalink:"/test-your-app/testing-your-own-apps"}},c=[{value:"API Catalog",id:"api-catalog",children:[],level:2},{value:"Test Plans",id:"test-plans",children:[{value:"Test Fixtures &amp; Parameters",id:"test-fixtures--parameters",children:[],level:4}],level:2},{value:"CLI - Test Runner",id:"cli---test-runner",children:[],level:2},{value:"Test Run Reports",id:"test-run-reports",children:[],level:2}],u={toc:c};function d(e){var t=e.components,s=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"key-concepts"},"Key Concepts"),(0,a.kt)("p",null,"Levo is purpose built for modern development teams, and developers."),(0,a.kt)("p",null,"Below are a few key concepts that should be pretty intuitive for developers and AppSec teams."),(0,a.kt)("h2",{id:"api-catalog"},"API Catalog"),(0,a.kt)("p",null,"Levo autogenerates security and resilience tests for APIs based on schema definitions for API endpoints."),(0,a.kt)("p",null,"These schemas can either be auto discovered (by observing runtime traffic) or imported into Levo."),(0,a.kt)("p",null,"The API Catalog is a store and directory for the aforementioned schemas. "),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(1472).Z}),"\n",(0,a.kt)("img",{src:n(2878).Z})),(0,a.kt)("p",null,"The catalog is comprised of ",(0,a.kt)("inlineCode",{parentName:"p"},"Applications"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"Services"),". An ",(0,a.kt)("inlineCode",{parentName:"p"},"Application")," is a logical grouping of a set of API endpoints."),(0,a.kt)("p",null,"An ",(0,a.kt)("inlineCode",{parentName:"p"},"Application")," can contain one or more ",(0,a.kt)("inlineCode",{parentName:"p"},"Services"),", where a ",(0,a.kt)("inlineCode",{parentName:"p"},"Service")," is another logical grouping of a set of API endpoints."),(0,a.kt)("p",null,"This type of organization is very common in Microservices Architecture (MSA)."),(0,a.kt)("h2",{id:"test-plans"},"Test Plans"),(0,a.kt)("p",null,"Autogenerated ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Plans")," are tailormade for each API (and it's associated endpoints)."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(3384).Z})),(0,a.kt)("p",null,"Test Plans can be generated for APIs present in either the ",(0,a.kt)("inlineCode",{parentName:"p"},"Application")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"Service")," (API Catalog) groupings."),(0,a.kt)("p",null,"A Test Plan is structured as show below.\n",(0,a.kt)("img",{src:n(6651).Z})),(0,a.kt)("p",null,"A Test plan is comprised of ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Suites"),". A Test Suite is focussed on a single API endpoint, and comprises of a set of ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Cases"),"."),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Case")," has a singular objective, and tests the specific API endpoint for a specific vulnerability. For example, the test the API endpoint for a ",(0,a.kt)("a",{target:"_blank",href:n(1281).Z},"SSRF")," vulnerability, or an authorization bypass vulnerability."),(0,a.kt)("h4",{id:"test-fixtures--parameters"},"Test Fixtures & Parameters"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Test_fixture#Software"},"Software test fixtures")," initialize test functions. They provide a fixed baseline so that tests execute reliably and produce consistent, repeatable, results."),(0,a.kt)("p",null,"Initialization may setup services, state, or provide seed values to (mandatory & optional) API input parameters, so that the API invocation succeeds."),(0,a.kt)("p",null,"For example, effective testing of the API endpoint ",(0,a.kt)("inlineCode",{parentName:"p"},"GET /ride_receipts/{receipt_id}"),", might require a\nknown and valid value for the ",(0,a.kt)("inlineCode",{parentName:"p"},"{receipt_id}")," parameter, which is present in the receipts database."),(0,a.kt)("p",null,"Without this known seed value, the test that exercises this API endpoint might not get a proper response from the API endpoint."),(0,a.kt)("p",null,"Fixtures allow providing this seed value for the ",(0,a.kt)("inlineCode",{parentName:"p"},"{receipt_id}")," parameter. ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/junit-team/junit4/wiki/Test-fixtures"},"JUnit Fixtures"),", and ",(0,a.kt)("a",{parentName:"p",href:"https://docs.pytest.org/en/6.2.x/fixture.html"},"PyTest Fixtures")," are pretty commonly used by modern development teams."),(0,a.kt)("p",null,"Levo provides fixtures for configuring seed values for various API endpoint parameters. These fixtures are available at the ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Case")," level, ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Suite")," level, and ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Plan")," level as shown below."),(0,a.kt)("p",null,"Fixtures at the ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Suite")," level will automatically apply to all ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Cases")," within that ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Suite"),". Fixtures ate the ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Plan")," level will apply to all ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Suites"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(6613).Z})),(0,a.kt)("h2",{id:"cli---test-runner"},"CLI - Test Runner"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(4693).Z})),(0,a.kt)("p",null,"The CLI is the component that executes the autogenerated Test Plans. The CLI can be run on a developer's laptop or integrated into CI/CD environments."),(0,a.kt)("p",null,"Levo provides pre-packaged runner/actions integrations for several popular CI/CD products."),(0,a.kt)("h2",{id:"test-run-reports"},"Test Run Reports"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(4945).Z})),(0,a.kt)("p",null,"The execution results of the Test Plans are reported to Levo SaaS by the CLI. The CLI also provides a summary of execution results in the console. This summary is also available in the CI/CD logs (when integrated with CI/CD)."))}d.isMDXComponent=!0},1281:function(e,t,n){t.Z=n.p+"assets/files/SSRF-e4c157a92f98601945b634f57ecd6292.svg"},1472:function(e,t,n){t.Z=n.p+"assets/images/api-catalog-structure-1-e101c670965ec76555a4c2bd59232074.png"},2878:function(e,t,n){t.Z=n.p+"assets/images/api-catalog-structure-2-3b42416eeee6f943ac576e08b10d3368.png"},4693:function(e,t,n){t.Z=n.p+"assets/images/cli-test-runner-83c5bfdd25929551186ca9a40e923001.svg"},6613:function(e,t,n){t.Z=n.p+"assets/images/fixtures-9e4a9d54594d695a8337c0f5514c7959.png"},6651:function(e,t,n){t.Z=n.p+"assets/images/test-plan-structure-1-cd9364d2f1ec78ddfda647b29b3116b6.png"},3384:function(e,t,n){t.Z=n.p+"assets/images/test-plans-54903b38946e87f1892a8445cccf1e3b.png"},4945:function(e,t,n){t.Z=n.p+"assets/images/test-run-reports-4e9a6feeeb27c97603039c53045a6349.png"}}]);