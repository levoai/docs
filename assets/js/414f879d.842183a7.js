"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[376],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=s(n),d=o,m=h["".concat(u,".").concat(d)]||h[d]||p[d]||r;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=h;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6595:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return h}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],l={sidebar_position:2},u="Supported Authentication Methods",s={unversionedId:"concepts/env-yaml-file/env-file-auth-methods",id:"concepts/env-yaml-file/env-file-auth-methods",isDocsHomePage:!1,title:"Supported Authentication Methods",description:"The default authentication mechanism is Bearer Authentication, and the environment.yml file is auto-generated to use this method.",source:"@site/docs/concepts/env-yaml-file/env-file-auth-methods.md",sourceDirName:"concepts/env-yaml-file",slug:"/concepts/env-yaml-file/env-file-auth-methods",permalink:"/concepts/env-yaml-file/env-file-auth-methods",editUrl:"https://github.com/levoai/docs/edit/main/docs/concepts/env-yaml-file/env-file-auth-methods.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"The Environment YAML File",permalink:"/concepts/env-yaml-file/environment-yaml-file"},next:{title:"How do I use Levo with my own applications?",permalink:"/test-your-app/testing-your-own-apps"}},c=[{value:"Bearer Tokens",id:"bearer-tokens",children:[],level:2},{value:"Login API / form based login (aka http_call)",id:"login-api--form-based-login-aka-http_call",children:[],level:2},{value:"Basic authentication",id:"basic-authentication",children:[],level:2},{value:"Cookie based authentication",id:"cookie-based-authentication",children:[],level:2},{value:"OAuth",id:"oauth",children:[],level:2}],p={toc:c};function h(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"supported-authentication-methods"},"Supported Authentication Methods"),(0,r.kt)("p",null,"The default authentication mechanism is ",(0,r.kt)("a",{parentName:"p",href:"https://swagger.io/docs/specification/authentication/bearer-authentication/"},"Bearer Authentication"),", and the ",(0,r.kt)("inlineCode",{parentName:"p"},"environment.yml")," file is auto-generated to use this method."),(0,r.kt)("p",null,"You can customize the authentication method to suit your needs."),(0,r.kt)("p",null,"Below are various authentication methods supported by levo, and the corresponding structure of the ",(0,r.kt)("inlineCode",{parentName:"p"},"environment.yml")," file,\nto properly activate the authentication method."),(0,r.kt)("p",null,"Please customize the auto generated ",(0,r.kt)("inlineCode",{parentName:"p"},"environment.yml")," file accordingly."),(0,r.kt)("h2",{id:"bearer-tokens"},"Bearer Tokens"),(0,r.kt)("p",null,"The default authentication mechanism is ",(0,r.kt)("a",{parentName:"p",href:"https://swagger.io/docs/specification/authentication/bearer-authentication/"},"Bearer Authentication"),". You are required to provide\nvalid ",(0,r.kt)("inlineCode",{parentName:"p"},"bearer tokens")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"user_1")," in the example below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},"iam:\n  users:\n  - name: user_1\n    default: true\n    bearer_tokens:\n    - name: bearerAuth\n      value: <Enter the bearer token>\n")),(0,r.kt)("h2",{id:"login-api--form-based-login-aka-http_call"},"Login API / form based login (aka http_call)"),(0,r.kt)("p",null,"If you use an API (or HTTP JSON forms) to acquire a authentication token (bearer token) in exchange for user\ncredentials, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"http_call")," method."),(0,r.kt)("p",null,"This method requires you to provide the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The login URL"),(0,r.kt)("li",{parentName:"ul"},"The key names for both the username and password values that are sent in the login request"),(0,r.kt)("li",{parentName:"ul"},"The location in the login URL's response where the authentication token is present."),(0,r.kt)("li",{parentName:"ul"},"The username and password values for the ",(0,r.kt)("inlineCode",{parentName:"li"},"user_1")," used in security tests.")),(0,r.kt)("p",null,"Below is the syntax to enable ",(0,r.kt)("inlineCode",{parentName:"p"},"http_call")," based login."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},"iam:\n  authenticator:\n  - name: bearerAuth\n    type: http_call\n    login_url: <The identity endpoint to generate token>\n    username_key: <The key to be used to send username in request body>\n    password_key: <The key to be used to send password in request body>\n    session_credential_extractors:\n    - name: http_call_based_extractor\n      type: bearer_token\n      location: '<Enter the location secret can be extracted from. Valid values: header/body>'\n      path: <The path of the secret value in case of location=body>\n      header_name: <The header name which contains the token in case location=header>\n  users:\n  - name: user_1\n    username: <Enter the username>\n    password: <Enter the password>\n    default: true\n    authenticator_name: bearerAuth\n")),(0,r.kt)("h2",{id:"basic-authentication"},"Basic authentication"),(0,r.kt)("p",null,"Coming soon ..."),(0,r.kt)("h2",{id:"cookie-based-authentication"},"Cookie based authentication"),(0,r.kt)("p",null,"Coming soon ..."),(0,r.kt)("h2",{id:"oauth"},"OAuth"),(0,r.kt)("p",null,"Coming soon ..."))}h.isMDXComponent=!0}}]);