"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7766],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1718:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:6},c="Install Code Analysis Tools",s={unversionedId:"install-code-analysis-tools",id:"install-code-analysis-tools",title:"Install Code Analysis Tools",description:"Prerequisites",source:"@site/docs/install-code-analysis-tools.md",sourceDirName:".",slug:"/install-code-analysis-tools",permalink:"/install-code-analysis-tools",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/install-code-analysis-tools.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Install Log Parsing Sensors",permalink:"/install-log-parsing-sensors"},next:{title:"Install API Portal",permalink:"/install-api-portal"}},p={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Instructions to setup code-scanning",id:"instructions-to-setup-code-scanning",level:2},{value:"Scan Code and identify REST API Endpoints",id:"scan-code-and-identify-rest-api-endpoints",level:3},{value:"Scan project directory to fetch and import OpenAPI/Swagger specs",id:"scan-project-directory-to-fetch-and-import-openapiswagger-specs",level:3}],u={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"install-code-analysis-tools"},"Install Code Analysis Tools"),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Docker is installed on your machine."),(0,a.kt)("li",{parentName:"ul"},"Ensure that you are able to launch and use Docker containers, and network connectivity works."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"api.levo.ai")," is reachable from the host machine")),(0,a.kt)("h2",{id:"instructions-to-setup-code-scanning"},"Instructions to setup code-scanning"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/security-testing/test-laptop"},"Install Levo CLI"),", which contains the commands to scan code"),(0,a.kt)("li",{parentName:"ul"},"Once the CLI is installed, you can",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#scan-code-and-identify-rest-api-endpoints"},"Scan your code and identify REST API endpoints.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#scan-project-directory-to-fetch-and-import-openapiswagger-specs"},"Scan the project directory to look for existing OpenAPI/Swagger specs."))))),(0,a.kt)("h3",{id:"scan-code-and-identify-rest-api-endpoints"},"Scan Code and identify REST API Endpoints"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Login to Levo CLI",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"levo login\n"))),(0,a.kt)("li",{parentName:"ul"},"Enter the CLI authorization key and select the organization."),(0,a.kt)("li",{parentName:"ul"},"Once logged in, go to the project directory where you want to run code-scanning",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"cd <your_project_directory>\n"))),(0,a.kt)("li",{parentName:"ul"},"Inside the project directory, run the below CLI command",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"levo scan code \\\n    --dir <relative path to directory you wish to scan> \\\n    --app-name <name of the app you wish to see on Dashboard> \\\n    --env-name <the environment to which your app should belong>\n"))),(0,a.kt)("li",{parentName:"ul"},"In the ",(0,a.kt)("inlineCode",{parentName:"li"},"--dir")," option, you can specify the relative subdirectory path (",(0,a.kt)("inlineCode",{parentName:"li"},"./path/to/sub-directory"),") if you want to scan only a part of the project, or simply DOT (",(0,a.kt)("inlineCode",{parentName:"li"},"."),") for the current directory."),(0,a.kt)("li",{parentName:"ul"},"If there are REST endpoints in the code, they will be imported to the Levo Dashboard, under the given app-name.")),(0,a.kt)("h3",{id:"scan-project-directory-to-fetch-and-import-openapiswagger-specs"},"Scan project directory to fetch and import OpenAPI/Swagger specs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Login to Levo CLI",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"levo login\n"))),(0,a.kt)("li",{parentName:"ul"},"Enter the CLI authorization key and select the organization."),(0,a.kt)("li",{parentName:"ul"},"Once logged in, go to the project directory where you want to scan for openAPI specs.",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"cd <your_project_directory>\n"))),(0,a.kt)("li",{parentName:"ul"},"Inside the project directory, run the below CLI command",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"levo scan schema \\\n    --dir <relative path to directory you want to scan>  \\\n    --env-name <the environment to which your app should belong>\n"))),(0,a.kt)("li",{parentName:"ul"},"In the ",(0,a.kt)("inlineCode",{parentName:"li"},"--dir")," option, you can specify the relative subdirectory path (",(0,a.kt)("inlineCode",{parentName:"li"},"./path/to/sub-directory"),") if you want to scan only a part of the project, or simply DOT (",(0,a.kt)("inlineCode",{parentName:"li"},"."),") for the current directory."),(0,a.kt)("li",{parentName:"ul"},"If there are OpenAPI/Swagger specs in the project directory, they will be imported to Levo Dashboard."),(0,a.kt)("li",{parentName:"ul"},"The App Name will be the same as the title of the OpenAPI/Swagger spec.")))}m.isMDXComponent=!0}}]);