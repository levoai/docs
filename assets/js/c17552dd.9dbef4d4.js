"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9206],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||s;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1670:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(3117),o=n(102),s=(n(7294),n(3905)),a=["components"],i={sidebar_position:6},l="Sensor as a Systemd Service",c={unversionedId:"install-traffic-capture-sensors/ebpf-sensor/sensor-systemd-service",id:"install-traffic-capture-sensors/ebpf-sensor/sensor-systemd-service",title:"Sensor as a Systemd Service",description:"Running the Sensor as a Systemd Service",source:"@site/docs/install-traffic-capture-sensors/ebpf-sensor/sensor-systemd-service.md",sourceDirName:"install-traffic-capture-sensors/ebpf-sensor",slug:"/install-traffic-capture-sensors/ebpf-sensor/sensor-systemd-service",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-systemd-service",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/install-traffic-capture-sensors/ebpf-sensor/sensor-systemd-service.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Sensor via YUM Package",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-yum-package"},next:{title:"Install PCAP Sensor",permalink:"/install-traffic-capture-sensors/pcap-sensor/"}},p={},u=[{value:"Running the Sensor as a Systemd Service",id:"running-sensor-systemd",level:2},{value:"1. Configure Satellite Address",id:"1-configure-satellite-address",level:3},{value:"NOTE:",id:"note",level:4},{value:"2. Configure Application Name",id:"2-configure-application-name",level:3},{value:"Configure sensor environment",id:"configure-sensor-environment",level:3},{value:"3. Start the Sensor",id:"3-start-the-sensor",level:3},{value:"4. Verify connectivity with Satellite",id:"4-verify-connectivity-with-satellite",level:3},{value:"Connection Success",id:"connection-success",level:4},{value:"Connection Failures",id:"connection-failures",level:4},{value:"5. Sensor&#39;s resource limits",id:"5-sensors-resource-limits",level:3},{value:"1. Open the config file <code>/usr/lib/systemd/system/levo-ebpf-sensor.service</code> and modify <code>CPUQuota</code> and <code>MemoryMax</code>",id:"1-open-the-config-file-usrlibsystemdsystemlevo-ebpf-sensorservice-and-modify-cpuquota-and-memorymax",level:4},{value:"2. Reload the config",id:"2-reload-the-config",level:4},{value:"3. Restart the sensor",id:"3-restart-the-sensor",level:4}],d={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"sensor-as-a-systemd-service"},"Sensor as a Systemd Service"),(0,s.kt)("h2",{id:"running-sensor-systemd"},"Running the Sensor as a Systemd Service"),(0,s.kt)("h3",{id:"1-configure-satellite-address"},"1. Configure Satellite Address"),(0,s.kt)("p",null,"The Satellite (collector) address is configured in ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/levo/sensor/config.yaml"),"."),(0,s.kt)("h4",{id:"note"},"NOTE:"),(0,s.kt)("p",null,"The default address for the collector in Systemd installations is ",(0,s.kt)("inlineCode",{parentName:"p"},"https://collector.levo.ai"),".\nThis address assumes that Levo is hosting the Satellite for you, and you must also specify an organization ID (",(0,s.kt)("inlineCode",{parentName:"p"},"organization-id"),") via the config file.\nIf you wish, you may also host the Satellite yourself and specify the address of the collector in the self-hosted Satellite to direct the Sensor's traffic to it."),(0,s.kt)("p",null,"Edit ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/levo/sensor/config.yaml"),", set ",(0,s.kt)("inlineCode",{parentName:"p"},"satellite-url")," (under Satellite Settings) to the desired ",(0,s.kt)("inlineCode",{parentName:"p"},"host:port")," value,\nand set ",(0,s.kt)("inlineCode",{parentName:"p"},"organization-id")," to the Organization ID fetched from the Levo Dashboard"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'...\norganization-id: <Org ID>\n# --------------------------------------------------------------------------------------------\n# Satellite Settings:\n# --------------------------------------------------------------------------------------------\n\n# Levo Organization ID. This must be specified when the collector is hosted by Levo.\n# organization-id: ""\n\n# host:port for the collector service receiving the Sensor\'s API traces.\nsatellite-url: <Use the default (https://collector.levo.ai) or set to a custom address>\n...\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Note"),": If you change the Satellite address later, you have to restart the Sensor, since it's not a hot property."),(0,s.kt)("h3",{id:"2-configure-application-name"},"2. Configure Application Name"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Application Name")," is configured in ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/levo/sensor/config.yaml"),"."),(0,s.kt)("p",null,"Edit ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/levo/sensor/config.yaml"),", and set ",(0,s.kt)("inlineCode",{parentName:"p"},"default-service-name")," to the ",(0,s.kt)("inlineCode",{parentName:"p"},"Application Name")," chosen earlier."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"# --------------------------------------------------------------------------------------------\n# Default Application Name:\n#\n# Auto discovered API endpoints and their OpenAPI specifications are show in the API Catalog\n# grouped under this application name. The application name helps segregate and group API\n# endpoints from different environments.\n# --------------------------------------------------------------------------------------------\n#\ndefault-service-name: <'Application Name' chosen earlier>\n# --------------------------------------------------------------------------------------------\n")),(0,s.kt)("h3",{id:"configure-sensor-environment"},"Configure sensor environment"),(0,s.kt)("p",null,"The eBPF sensor environment is configured in ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/default/levo-ebpf-sensor"),". The default env value is ",(0,s.kt)("inlineCode",{parentName:"p"},"staging")),(0,s.kt)("p",null,"Edit ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/default/levo-ebpf-sensor"),", and set ",(0,s.kt)("inlineCode",{parentName:"p"},"LEVO_ENV")," to the desired env value (eg. ",(0,s.kt)("inlineCode",{parentName:"p"},"prod"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"qa"),")"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# Environment Variables for levo-ebpf-sensor.service\nMALLOC_CONF="background_thread:true,narenas:1,tcache:false,dirty_decay_ms:0,muzzy_decay_ms:0,abort_conf:true"\nLEVO_ENV="staging"\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Note"),": If you change the ",(0,s.kt)("inlineCode",{parentName:"p"},"Application Name")," later, you have to restart the Sensor, since it's not a hot property."),(0,s.kt)("h3",{id:"3-start-the-sensor"},"3. Start the Sensor"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start levo-ebpf-sensor\n")),(0,s.kt)("h3",{id:"4-verify-connectivity-with-satellite"},"4. Verify connectivity with Satellite"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo journalctl -u levo-ebpf-sensor.service -b -f\n\n# If 'journalctl' isn't tailing logs, use syslog:\nsudo cat /var/log/syslog | grep 'levo-ebpf-sensor'\n")),(0,s.kt)("h4",{id:"connection-success"},"Connection Success"),(0,s.kt)("p",null,"If connectivity is healthy, you should see output similar to below."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"2022/06/13 21:15:40 729071  INFO [ebpf_sensor.cpp->main:120]    Initial connection with Collector was successful.\n")),(0,s.kt)("h4",{id:"connection-failures"},"Connection Failures"),(0,s.kt)("p",null,"If the Sensor is unable to connect with the Satellite, you will notice log entries similar to the one below. Please contact ",(0,s.kt)("inlineCode",{parentName:"p"},"support@levo.ai")," for assistance."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Initial connection with Collector failed. However, the sensor will keep attempting to send future traces.\n\n[OTLP TRACE GRPC Exporter] Export() failed: failed to connect to all addresses\n")),(0,s.kt)("p",null,"Please proceed to the next step, if there are no errors."),(0,s.kt)("h3",{id:"5-sensors-resource-limits"},"5. Sensor's resource limits"),(0,s.kt)("p",null,"By default, sensor is restricted to use up to 50% of CPU and 2GB memory."),(0,s.kt)("p",null,"If you ever need to change these limits, you need to modify ",(0,s.kt)("inlineCode",{parentName:"p"},"CPUQuota")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"MemoryMax")," in the below systemd config file under ",(0,s.kt)("inlineCode",{parentName:"p"},"[Service]")," section:"),(0,s.kt)("h4",{id:"1-open-the-config-file-usrlibsystemdsystemlevo-ebpf-sensorservice-and-modify-cpuquota-and-memorymax"},"1. Open the config file ",(0,s.kt)("inlineCode",{parentName:"h4"},"/usr/lib/systemd/system/levo-ebpf-sensor.service")," and modify ",(0,s.kt)("inlineCode",{parentName:"h4"},"CPUQuota")," and ",(0,s.kt)("inlineCode",{parentName:"h4"},"MemoryMax")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo vi /usr/lib/systemd/system/levo-ebpf-sensor.service\n")),(0,s.kt)("p",null,"For example,"),(0,s.kt)("p",null,"If you want to limit sensor's CPU usage to 0.75 of a core, then set ",(0,s.kt)("inlineCode",{parentName:"p"},"CPUQuota=75%"),". You can set ",(0,s.kt)("inlineCode",{parentName:"p"},"CPUQuota=200%")," to go upto two full cores of CPU."),(0,s.kt)("p",null,"If you want to limit sensor's memory usage to 1GB, then set ",(0,s.kt)("inlineCode",{parentName:"p"},"MemoryMax=1G")),(0,s.kt)("h4",{id:"2-reload-the-config"},"2. Reload the config"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"systemctl daemon-reload\n")),(0,s.kt)("h4",{id:"3-restart-the-sensor"},"3. Restart the sensor"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl restart levo-ebpf-sensor\n")))}f.isMDXComponent=!0}}]);