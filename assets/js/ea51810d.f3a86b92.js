"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[233],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return p}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),p=i,m=d["".concat(u,".").concat(p)]||d[p]||h[p]||o;return n?a.createElement(m,r(r({ref:t},l),{},{components:n})):a.createElement(m,r({ref:t},l))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3509:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return h}});var a=n(3117),i=n(102),o=(n(7294),n(3905)),r=["components"],s={sidebar_position:2},u="Supported Authentication Methods",c={unversionedId:"tasks/authentication/supported-auth-methods",id:"tasks/authentication/supported-auth-methods",title:"Supported Authentication Methods",description:"The default authentication mechanism is Bearer Authentication, and the environment.yml file is auto-generated to use this method.",source:"@site/docs/tasks/authentication/supported-auth-methods.md",sourceDirName:"tasks/authentication",slug:"/tasks/authentication/supported-auth-methods",permalink:"/tasks/authentication/supported-auth-methods",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/tasks/authentication/supported-auth-methods.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Providing Authentication for Tests",permalink:"/tasks/authentication/authn"},next:{title:"Providing Authorization Information for Authorization Abuse Tests",permalink:"/tasks/authentication/authz"}},l={},h=[{value:"Bearer Tokens",id:"bearer-tokens",level:2},{value:"Login API / form based login (aka http_call)",id:"login-api--form-based-login-aka-http_call",level:2},{value:"Basic Authentication",id:"basic-authentication",level:2},{value:"Basic Authentication (no roles)",id:"basic-authentication-no-roles",level:3},{value:"Basic Authentication (with roles)",id:"basic-authentication-with-roles",level:3},{value:"API key based authentication",id:"api-key-based-authentication",level:2},{value:"Cookie based authentication",id:"cookie-based-authentication",level:2},{value:"OAuth",id:"oauth",level:2}],d={toc:h};function p(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"supported-authentication-methods"},"Supported Authentication Methods"),(0,o.kt)("p",null,"The default authentication mechanism is ",(0,o.kt)("a",{parentName:"p",href:"https://swagger.io/docs/specification/authentication/bearer-authentication/"},"Bearer Authentication"),", and the ",(0,o.kt)("inlineCode",{parentName:"p"},"environment.yml")," file is auto-generated to use this method."),(0,o.kt)("p",null,"You can customize the authentication method to suit your needs."),(0,o.kt)("p",null,"Below are various authentication methods supported by levo, and the corresponding structure of the ",(0,o.kt)("inlineCode",{parentName:"p"},"environment.yml")," file, to properly activate the authentication method."),(0,o.kt)("p",null,"Please customize the auto generated ",(0,o.kt)("inlineCode",{parentName:"p"},"environment.yml")," file accordingly."),(0,o.kt)("h2",{id:"bearer-tokens"},"Bearer Tokens"),(0,o.kt)("p",null,"The default authentication mechanism is ",(0,o.kt)("a",{parentName:"p",href:"https://swagger.io/docs/specification/authentication/bearer-authentication/"},"Bearer Authentication"),". You are required to provide\nvalid ",(0,o.kt)("inlineCode",{parentName:"p"},"bearer tokens")," for ",(0,o.kt)("inlineCode",{parentName:"p"},"user_1")," in the example below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-YAML"},"iam:\n  users:\n  - name: user_1\n    default: true # This user's credentials will be used for all authentication\n    bearer_tokens:\n    - name: bearerAuth\n      value: <Enter the bearer token>\n")),(0,o.kt)("h2",{id:"login-api--form-based-login-aka-http_call"},"Login API / form based login (aka http_call)"),(0,o.kt)("p",null,"If you use an API (or HTTP JSON forms) to acquire a authentication token (bearer token) in exchange for user\ncredentials, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"http_call")," method."),(0,o.kt)("p",null,"This method requires you to provide the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The login URL"),(0,o.kt)("li",{parentName:"ul"},"The HTTP method to use when fetching the URL. Only ",(0,o.kt)("inlineCode",{parentName:"li"},"POST")," & ",(0,o.kt)("inlineCode",{parentName:"li"},"GET")," supported. If unspecified will use ",(0,o.kt)("inlineCode",{parentName:"li"},"POST"),"."),(0,o.kt)("li",{parentName:"ul"},"The key names for both the username and password values that are sent in the login request's POST (JSON) body."),(0,o.kt)("li",{parentName:"ul"},"The location in the login URL's JSON response, where the authentication token is present."),(0,o.kt)("li",{parentName:"ul"},"The username and base64 encoded password values for the ",(0,o.kt)("inlineCode",{parentName:"li"},"user_1")," used in security tests.")),(0,o.kt)("p",null,"Below is the syntax to enable ",(0,o.kt)("inlineCode",{parentName:"p"},"http_call")," based login."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-YAML"},"iam:\n  #\n  #\n  # This section specifies how to extract an authentication token\n  authenticators:\n    - name: my_authenticator\n      type: http_call # Makes a HTTP request using the specified method\n      method: <POST | GET> # Defaults to POST if unspecified\n      login_url: /identity/api/auth/login # URL for HTTP request\n      username_key: <JSON key for username> # Key in HTTP request's JSON body that specifies the user value\n      password_key: <JSON key for password> # Key in HTTP request's JSON body that specifies the password value\n      #\n      #\n      # This section specifies how to extract a token in the HTTP response\n      session_credential_extractors:\n        - name: access_token\n          type: bearer_token\n          location: <header | body> # Specifies the location to extract the token. Header or Body.\n          path: <JSON path expression> # In case the location is `body`, a JSON path expression to the token in the response body\n  #\n  #\n  # This section specifies actual user information the test plan will use\n  users:\n    - name: user_1\n      default: true # This user's credentials will be used to access all API endpoints requiring AuthN\n      username: <user_id>\n      password_base64: <base64 password> # Passwords need to be base64 encoded\n      authenticator: my_authenticator\n")),(0,o.kt)("h2",{id:"basic-authentication"},"Basic Authentication"),(0,o.kt)("p",null,"Below are format examples for ",(0,o.kt)("inlineCode",{parentName:"p"},"Basic Authentication")," with and without ",(0,o.kt)("inlineCode",{parentName:"p"},"role")," information."),(0,o.kt)("h3",{id:"basic-authentication-no-roles"},"Basic Authentication (no roles)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-YAML"},"iam:\n  authenticators:\n    - name: <your friendly name for this authenticator>\n      type: basic_auth # Use Basic Authentication for API calls\n  users:\n    # This section defines users and their respective credentials\n    # The credentials will be used in the Basic Authentication scheme\n    - name: user_1\n      username: <username for an actual user in your API's backend>\n      password: <password for the specified user>\n      # Below defines which authentication mechanism to use\n      authenticator: <friendly name of the authenticator specified above>\n")),(0,o.kt)("h3",{id:"basic-authentication-with-roles"},"Basic Authentication (with roles)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-YAML"},"iam:\n  authenticators:\n    - name: <your friendly name for this authenticator>\n      type: basic_auth # Use Basic Authentication for API calls\n  users:\n    # This section defines users and their respective credentials\n    # The credentials will be used in the Basic Authentication scheme\n    #\n    # `user_1` with role ROLE_USER\n    - name: user_1\n      default: true # Default user for `ROLE_USER`\n      username: <username for an actual user in your API's backend>\n      password: <password for the specified user>\n      # Below defines which authentication mechanism to use\n      authenticator: <friendly name of the authenticator specified above>\n      roles:\n        - ROLE_USER\n    #\n    # `user_2` with role ROLE_USER\n    - name: user_2\n      username: <username for an actual user in your API's backend>\n      password: <password for the specified user>\n      # Below defines which authentication mechanism to use\n      authenticator: <friendly name of the authenticator specified above>\n      roles:\n        - ROLE_USER\n    #\n    # `admin_1` with role ROLE_ADMIN\n    - name: admin_1\n      default: true # Default user for `ROLE_ADMIN`\n      username: <username for an actual user in your API's backend>\n      password: <password for the specified user>\n      # Below defines which authentication mechanism to use\n      authenticator: <friendly name of the authenticator specified above>\n      roles:\n        - ROLE_ADMIN\n    #\n    # `admin_2` with role ROLE_ADMIN\n    - name: admin_2\n      username: <username for an actual user in your API's backend>\n      password: <password for the specified user>\n      # Below defines which authentication mechanism to use\n      authenticator: <friendly name of the authenticator specified above>\n      roles:\n        - ROLE_ADMIN\n")),(0,o.kt)("h2",{id:"api-key-based-authentication"},"API key based authentication"),(0,o.kt)("p",null,"The OpenAPI specification file (in the API catalog), specifies if the API uses API keys for authentication, and the exact location of the API key (query parameter, header, etc)."),(0,o.kt)("p",null,"The environment.yml file provides specific values for the API key and can be specific for each user. Below is the format when using API keys."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-YAML"},"iam:\n  authenticators:\n    - name: <your friendly name for this authenticator>\n      type: api_key # Use API key authentication for API calls\n  users:\n    # This section defines users and their respective API keys\n    - name: user_1\n      api_keys:\n      - name: <friendly name for your API key for user_1>\n        value: <your api key value>\n      # Below defines which authentication mechanism to use\n      authenticator: <friendly name of the authenticator specified above>\n")),(0,o.kt)("p",null,"If you using roles, the format is similar to the Basic Authentication example. You just need to use API key instead of username and password."),(0,o.kt)("h2",{id:"cookie-based-authentication"},"Cookie based authentication"),(0,o.kt)("p",null,"Coming soon ..."),(0,o.kt)("h2",{id:"oauth"},"OAuth"),(0,o.kt)("p",null,"Coming soon ..."))}p.isMDXComponent=!0}}]);