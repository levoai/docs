"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1934],{3111:function(e,n,a){a.r(n),a.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return k},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return g}});var s=a(3117),t=a(102),o=(a(7294),a(3905)),r=a(7808),l=a(6066),i=["components"],p={sidebar_position:4},c="Sensor via APT Package",u={unversionedId:"install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package",id:"install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package",title:"Sensor via APT Package",description:"Install on Debian based Linux via apt",source:"@site/docs/install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package.md",sourceDirName:"install-traffic-capture-sensors/ebpf-sensor",slug:"/install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Install eBPF Sensor on Docker | Levo.ai Documentation",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-docker"},next:{title:"Sensor via YUM Package",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-yum-package"}},d={},g=[{value:"Install on Debian based Linux via <code>apt</code>",id:"install-on-debian-based-linux-via-apt",level:2},{value:"1. Install <code>curl</code> and <code>gnupg</code>",id:"1-install-curl-and-gnupg",level:3},{value:"2. Configure Linux host to access <code>Levo apt repo</code>",id:"2-configure-linux-host-to-access-levo-apt-repo",level:3},{value:"3. Download/install Sensor artifacts",id:"3-downloadinstall-sensor-artifacts",level:3},{value:"4. Start the Sensor",id:"4-start-the-sensor",level:3},{value:"Sensor Lifecycle Management",id:"sensor-lifecycle-management",level:2},{value:"Configure Satellite Address, Organization-Id and Environment",id:"configure-satellite-address-organization-id-and-environment",level:3},{value:"Enable and Start Sensor",id:"enable-and-start-sensor",level:3},{value:"Get Sensor Status",id:"get-sensor-status",level:3},{value:"Stop Sensor",id:"stop-sensor",level:3},{value:"Check Sensor Logs",id:"check-sensor-logs",level:3},{value:"Show Sensor Config",id:"show-sensor-config",level:3},{value:"Show Sensor Environment file",id:"show-sensor-environment-file",level:3},{value:"Uninstall Sensor",id:"uninstall-sensor",level:3},{value:"Manage Sensor Configuration",id:"manage-sensor-configuration",level:3}],f={toc:g};function k(e){var n=e.components,a=(0,t.Z)(e,i);return(0,o.kt)("wrapper",(0,s.Z)({},f,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sensor-via-apt-package"},"Sensor via APT Package"),(0,o.kt)("h2",{id:"install-on-debian-based-linux-via-apt"},"Install on Debian based Linux via ",(0,o.kt)("inlineCode",{parentName:"h2"},"apt")),(0,o.kt)("h3",{id:"1-install-curl-and-gnupg"},"1. Install ",(0,o.kt)("inlineCode",{parentName:"h3"},"curl")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"gnupg")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install gnupg\n\nsudo apt install curl\n")),(0,o.kt)("h3",{id:"2-configure-linux-host-to-access-levo-apt-repo"},"2. Configure Linux host to access ",(0,o.kt)("inlineCode",{parentName:"h3"},"Levo apt repo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://us-apt.pkg.dev/doc/repo-signing-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/us-apt-repo-signing-key.gpg\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'echo \\\n"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/us-apt-repo-signing-key.gpg] \\\n https://us-apt.pkg.dev/projects/levoai apt-levo main" \\\n| sudo tee -a /etc/apt/sources.list.d/artifact-registry.list > /dev/null\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\n")),(0,o.kt)("h3",{id:"3-downloadinstall-sensor-artifacts"},"3. Download/install Sensor artifacts"),(0,o.kt)(l.Z,{language:"bash",mdxType:"CodeBlock"},"sudo apt install levo-ebpf-sensor=",r.z),(0,o.kt)("h3",{id:"4-start-the-sensor"},"4. Start the Sensor"),(0,o.kt)("p",null,"Please take a look at the ",(0,o.kt)("a",{parentName:"p",href:"/install-traffic-capture-sensors/ebpf-sensor/sensor-systemd-service"},"Running the Sensor as a Systemd Service")," section for further instructions."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"sensor-lifecycle-management"},"Sensor Lifecycle Management"),(0,o.kt)("h3",{id:"configure-satellite-address-organization-id-and-environment"},"Configure Satellite Address, Organization-Id and Environment"),(0,o.kt)("p",null,"The Satellite address is configured in ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/default/levo-ebpf-sensor"),". The default Satellite URL is ",(0,o.kt)("inlineCode",{parentName:"p"},"https://collector.levo.ai"),"."),(0,o.kt)("p",null,"Edit ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/default/levo-ebpf-sensor"),", set the ",(0,o.kt)("inlineCode",{parentName:"p"},"LEVO_SATELLITE_URL")," variable to the desired ",(0,o.kt)("inlineCode",{parentName:"p"},"host:port")," value,\nand set the ",(0,o.kt)("inlineCode",{parentName:"p"},"LEVO_ORG_ID")," to the Organization ID fetched from the Levo Dashboard.\nSet ",(0,o.kt)("inlineCode",{parentName:"p"},"LEVO_ENV")," to the desired environment name in which you wish to see you applications on the Levo Dashboard."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'...\nLEVO_ENV="your-env"\nLEVO_SATELLITE_URL="your-satellite-url"\nLEVO_ORG_ID="your-org-id"\n...\n')),(0,o.kt)("p",null,"Additional sensor configs are present in the file ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/levo/sensor/config.yaml")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"A Sensor ",(0,o.kt)("em",{parentName:"strong"},"restart")," is required for the config changes to take effect.")),(0,o.kt)("h3",{id:"enable-and-start-sensor"},"Enable and Start Sensor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Note: The default config file is located at: '/etc/levo/sensor/config.yaml'\nsudo systemctl enable levo-ebpf-sensor\nsudo systemctl start levo-ebpf-sensor\n")),(0,o.kt)("h3",{id:"get-sensor-status"},"Get Sensor Status"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl status levo-ebpf-sensor\n")),(0,o.kt)("h3",{id:"stop-sensor"},"Stop Sensor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop levo-ebpf-sensor\n")),(0,o.kt)("h3",{id:"check-sensor-logs"},"Check Sensor Logs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"journalctl -u levo-ebpf-sensor.service -b -f --since \"15min ago\"\n\n# If journalctl isn't providing logs, you can alternatively:\nsudo cat syslog | grep 'levo-ebpf-sensor'\n")),(0,o.kt)("h3",{id:"show-sensor-config"},"Show Sensor Config"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cat /etc/levo/sensor/config.yaml\n")),(0,o.kt)("h3",{id:"show-sensor-environment-file"},"Show Sensor Environment file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cat /etc/default/levo-ebpf-sensor\n")),(0,o.kt)("h3",{id:"uninstall-sensor"},"Uninstall Sensor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo\xa0apt remove --purge levo-ebpf-sensor\nsudo apt clean\n")),(0,o.kt)("h3",{id:"manage-sensor-configuration"},"Manage Sensor Configuration"),(0,o.kt)("p",null,"Please refer to ",(0,o.kt)("a",{parentName:"p",href:"/install-traffic-capture-sensors/ebpf-sensor/common-tasks/sensor-configuration"},"Sensor Configuration"),", and ",(0,o.kt)("a",{parentName:"p",href:"/install-traffic-capture-sensors/ebpf-sensor/common-tasks/sensor-configuration#running-on-linux-host"},"Applying Configuration Changes"),"."))}k.isMDXComponent=!0},7808:function(e){e.exports=JSON.parse('{"z":"0.48.2","q":"0.2.1"}')}}]);