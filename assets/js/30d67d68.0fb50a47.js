"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1934],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,g=d["".concat(l,".").concat(f)]||d[f]||u[f]||s;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3111:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(3117),a=n(102),s=(n(7294),n(3905)),o=["components"],i={sidebar_position:4},l="Sensor via APT Package",c={unversionedId:"install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package",id:"install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package",title:"Sensor via APT Package",description:"Install on Debian based Linux via apt",source:"@site/docs/install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package.md",sourceDirName:"install-traffic-capture-sensors/ebpf-sensor",slug:"/install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/install-traffic-capture-sensors/ebpf-sensor/sensor-apt-package.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Sensor via Docker",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-docker"},next:{title:"Sensor via YUM Package",permalink:"/install-traffic-capture-sensors/ebpf-sensor/sensor-yum-package"}},p={},u=[{value:"Install on Debian based Linux via <code>apt</code>",id:"install-on-debian-based-linux-via-apt",level:2},{value:"1. Install <code>curl</code> and <code>gnupg</code>",id:"1-install-curl-and-gnupg",level:3},{value:"2. Configure Linux host to access <code>Levo apt repo</code>",id:"2-configure-linux-host-to-access-levo-apt-repo",level:3},{value:"3. Download/install Sensor artifacts",id:"3-downloadinstall-sensor-artifacts",level:3},{value:"4. Start the Sensor",id:"4-start-the-sensor",level:3}],d={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"sensor-via-apt-package"},"Sensor via APT Package"),(0,s.kt)("h2",{id:"install-on-debian-based-linux-via-apt"},"Install on Debian based Linux via ",(0,s.kt)("inlineCode",{parentName:"h2"},"apt")),(0,s.kt)("h3",{id:"1-install-curl-and-gnupg"},"1. Install ",(0,s.kt)("inlineCode",{parentName:"h3"},"curl")," and ",(0,s.kt)("inlineCode",{parentName:"h3"},"gnupg")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install gnupg\n\nsudo apt install curl\n")),(0,s.kt)("h3",{id:"2-configure-linux-host-to-access-levo-apt-repo"},"2. Configure Linux host to access ",(0,s.kt)("inlineCode",{parentName:"h3"},"Levo apt repo")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://us-apt.pkg.dev/doc/repo-signing-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/us-apt-repo-signing-key.gpg\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'echo \\\n"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/us-apt-repo-signing-key.gpg] \\\n https://us-apt.pkg.dev/projects/levoai apt-levo main" \\\n| sudo tee -a /etc/apt/sources.list.d/artifact-registry.list > /dev/null\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\n")),(0,s.kt)("h3",{id:"3-downloadinstall-sensor-artifacts"},"3. Download/install Sensor artifacts"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install levo-ebpf-sensor=0.29.6\n")),(0,s.kt)("h3",{id:"4-start-the-sensor"},"4. Start the Sensor"),(0,s.kt)("p",null,"Please take a look at the ",(0,s.kt)("a",{parentName:"p",href:"/install-traffic-capture-sensors/ebpf-sensor/sensor-systemd-service"},"Running the Sensor as a Systemd Service")," section for further instructions."))}f.isMDXComponent=!0}}]);