"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4481],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=p(n),d=a,m=h["".concat(l,".").concat(d)]||h[d]||u[d]||r;return n?o.createElement(m,i(i({ref:t},c),{},{components:n})):o.createElement(m,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7054:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var o=n(3117),a=n(102),r=(n(7294),n(3905)),i=["components"],s={sidebar_position:5},l="Levo CLI Command Reference",p={unversionedId:"security-testing/test-laptop/levo-cli-command-reference",id:"security-testing/test-laptop/levo-cli-command-reference",title:"Levo CLI Command Reference",description:"help",source:"@site/docs/security-testing/test-laptop/levo-cli-command-reference.md",sourceDirName:"security-testing/test-laptop",slug:"/security-testing/test-laptop/levo-cli-command-reference",permalink:"/security-testing/test-laptop/levo-cli-command-reference",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/security-testing/test-laptop/levo-cli-command-reference.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Upgrading Levo CLI",permalink:"/security-testing/test-laptop/levo-cli-upgrade-instructions"},next:{title:"GitHub Action",permalink:"/security-testing/github-action"}},c={},u=[{value:"help",id:"help",level:2},{value:"version",id:"version",level:2},{value:"login",id:"login",level:2},{value:"logout",id:"logout",level:2},{value:"test-conformance",id:"test-conformance",level:2},{value:"Usage Examples",id:"usage-examples",level:5},{value:"test",id:"test",level:2},{value:"Usage Examples",id:"usage-examples-1",level:5},{value:"test-plan",id:"test-plan",level:2},{value:"run",id:"run",level:3},{value:"export-env",id:"export-env",level:3},{value:"Usage Examples",id:"usage-examples-2",level:5},{value:"Additional Notes",id:"additional-notes",level:2},{value:"Usage with a proxy",id:"usage-with-a-proxy",level:3},{value:"Option 1: Copy proxy CA certificate",id:"option-1-copy-proxy-ca-certificate",level:4},{value:"Option 2: Use the <code>--ignore-ssl-verify</code> option",id:"option-2-use-the---ignore-ssl-verify-option",level:4}],h={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"levo-cli-command-reference"},"Levo CLI Command Reference"),(0,r.kt)("h2",{id:"help"},"help"),(0,r.kt)("p",null,"Show help message for the CLI,"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo --help")),(0,r.kt)("h2",{id:"version"},"version"),(0,r.kt)("p",null,"Show the current version of the CLI."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo --version")),(0,r.kt)("h2",{id:"login"},"login"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo login [options] <arguments>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Authenticate the CLI with Levo's SaaS portal.\n\nOptions:\n  -v, --verbosity [NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL]\n                                  OPTIONAL Accept all of the Python's log\n                                  level values: CRITICAL, ERROR, WARNING,\n                                  INFO, DEBUG, and NOTSET (all case\n                                  insensitive).\n  -k, --key TEXT                  Specify an authorization key to login with.\n                                  Go to https://app.dev.levo.ai/settings/keys\n                                  to get your authorization key.\n  -o, --organization TEXT         OPTIONAL Specify the id of the organization\n                                  you want to work with.\n  -h, --help                      Show this message and exit.\n")),(0,r.kt)("p",null,"The login command might ask you for a ",(0,r.kt)("inlineCode",{parentName:"p"},"CLI Authorization Key"),", that is used to authenticate the CLI with Levo.ai. This key can be retrieved from ",(0,r.kt)("a",{parentName:"p",href:"https://app.dev.levo.ai/settings/keys"},"User Profile--\x3eUser Settings--\x3eKeys"),"."),(0,r.kt)("p",null,"You will need an account on ",(0,r.kt)("a",{parentName:"p",href:"https://levo.ai/levo-signup/"},"Levo.ai")," to retrieve the key."),(0,r.kt)("p",null,"The login command stores authentication tokens in the ",(0,r.kt)("inlineCode",{parentName:"p"},"$HOME/.config/configstore/levo.json")," file (on the Docker host). This file is only accessible by the user who owns the $HOME directory. Treat this file as do with any secrets."),(0,r.kt)("h2",{id:"logout"},"logout"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo logout [options]")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Removes the local login config file.\n\nOptions:\n  -v, --verbosity [NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL]\n                                  OPTIONAL Accept all of the Python's log\n                                  level values: CRITICAL, ERROR, WARNING,\n                                  INFO, DEBUG, and NOTSET (all case\n                                  insensitive).\n  -h, --help                      Show this message and exit.\n")),(0,r.kt)("p",null,"The logout command removes the ",(0,r.kt)("inlineCode",{parentName:"p"},"$HOME/.config/configstore/levo.json")," file (on the Docker Host). This file contains authentication tokens, and other local state persisted by the CLI."),(0,r.kt)("h2",{id:"test-conformance"},"test-conformance"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo test-conformance [options] <arguments>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Perform schema conformance tests against API endpoints specified in the target-url.\n\nOptions:\n  --schema TEXT                   --schema must specify a valid URL or file\n                                  path (accessible from the CLI container)\n                                  that points to an Open API / Swagger\n                                  specification.  [required]\n  --target-url TEXT               --target-url must specify a valid URL\n                                  pointing to a live host that implements the\n                                  endpoints specified by --schema.  [required]\n  --disable-reporting-to-saas     Do not send test reports to Levo's SaaS\n                                  portal.\n  -H, --header TEXT               Custom header that will be used in all\n                                  requests to the target server. Example: -H\n                                  \"Authorization: Bearer 123\" .\n  --show-errors-tracebacks        Show full tracebacks for internal errors.\n  --ignore-ssl-verify TEXT        Controls whether the test run verifies the\n                                  server's SSL certificate.\n  -v, --verbosity [NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL]\n                                  OPTIONAL Accept all of the Python's log\n                                  level values: CRITICAL, ERROR, WARNING,\n                                  INFO, DEBUG, and NOTSET (all case\n                                  insensitive).\n  --export-junit-xml FILENAME     Export test results as JUnit XML\n  -h, --help                      Show this message and exit.\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Levo CLI runs as a Docker container and by default mounts the current working directory on the host file system as read/write. If specifying a schema file as an argument, please provide a path that is accessible by the CLI container.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Do not use ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost")," as arguments of the ",(0,r.kt)("inlineCode",{parentName:"p"},"--target-url"),", as these will not resolve correctly within the CLI container. Please use ",(0,r.kt)("inlineCode",{parentName:"p"},"host.docker.internal")," instead.")),(0,r.kt)("h5",{id:"usage-examples"},"Usage Examples"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo test-conformance --target-url http://host.docker.internal:9000/ --schema ./malschema.json")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo test-conformance --target-url http://host.docker.internal:9000/ --schema http://host.docker.internal:9000/api/openapi.json")),(0,r.kt)("h2",{id:"test"},"test"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo test [options] <arguments>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Execute a test plan against the specified target-url.\n\nOptions:\n  --target-url TEXT               --target-url must specify a valid URL\n                                  pointing to a live host that implements the\n                                  endpoints that are present in the test plan.\n                                  [required]\n  --disable-reporting-to-saas     Do not send test reports to Levo's SaaS\n                                  portal.\n  --test-plan TEXT                --test-plan must specify a valid Levo\n                                  Resource Name (LRN) or a path to a Levo Test\n                                  Plan folder (accessible from the CLI\n                                  container).  [required]\n  -H, --header TEXT               Custom header that will be used in all\n                                  requests to the target server. Example: -H\n                                  \"Authorization: Bearer 123\" .\n  --show-errors-tracebacks        Show full tracebacks for internal errors.\n  --env-file TEXT                 Path to YAML file with environment\n                                  definitions (AuthN/AuthZ info, etc.). This\n                                  file must be accessible from the CLI\n                                  container.\n  --ignore-ssl-verify TEXT        Controls whether the test run verifies the\n                                  server's SSL certificate.\n  -v, --verbosity [NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL]\n  -d, --suite-execution-delay INTEGER\n                                  Adds a delay between test suite execution\n  --request-timeout INTEGER       Timeout for the http request made to the API\n  --export-junit-xml FILENAME     Export test results as JUnit XML\n  -h, --help                      Show this message and exit.\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Levo CLI runs as a Docker container and by default mounts the current working directory on the host file system as read/write. If specifying a ",(0,r.kt)("inlineCode",{parentName:"p"},"Test Plan")," folder as an argument, please provide a path that is accessible by the CLI container.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Do not use ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost")," as arguments of the ",(0,r.kt)("inlineCode",{parentName:"p"},"--target-url"),", as these will not resolve correctly within the CLI container. Please use ",(0,r.kt)("inlineCode",{parentName:"p"},"host.docker.internal")," instead.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Authentication credentials and user role information might be required by some ",(0,r.kt)("inlineCode",{parentName:"p"},"Test Plans")," for proper execution. This is to be provided using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--env-file")," option. Please refer to details on ",(0,r.kt)("a",{parentName:"p",href:"/guides/security-testing/concepts/test-plans/env-yml"},"Authentication/Authorization"),".")),(0,r.kt)("h5",{id:"usage-examples-1"},"Usage Examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Using a local test plan folder\n",(0,r.kt)("inlineCode",{parentName:"p"},"levo test --target-url host.docker.internal:8888 --test-plan ./my-test-plan-folder --env-file ./environment.yml"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"using a LRN (Levo Resource Name) for a test plan located in Levo SaaS\n",(0,r.kt)("inlineCode",{parentName:"p"},"levo test --target-url host.docker.internal:8888 --test-plan demo:app/Demo_crAPI:tp/Demo_crAPI --env-file ./environment.yml")))),(0,r.kt)("p",null,"Here ",(0,r.kt)("inlineCode",{parentName:"p"},"demo:app/Demo_crAPI:tp/Demo_crAPI")," is the LRN for a test plan located in Levo SaaS."),(0,r.kt)("h2",{id:"test-plan"},"test-plan"),(0,r.kt)("p",null,"Test Plan management sub commands."),(0,r.kt)("h3",{id:"run"},"run"),(0,r.kt)("p",null,"This is an alias of the ",(0,r.kt)("inlineCode",{parentName:"p"},"levo test")," command."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo test-plan run [options] <arguments>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Run a test plan against the specified target-url.\n\nOptions:\n  --target-url TEXT               --target-url must specify a valid URL\n                                  pointing to a live host that implements the\n                                  endpoints that are present in the test plan.\n                                  [required]\n  --disable-reporting-to-saas     Do not send test reports to Levo's SaaS\n                                  portal.\n  --test-plan TEXT                --test-plan must specify a valid Levo\n                                  Resource Name (LRN) or a path to a Levo Test\n                                  Plan folder (accessible from the CLI\n                                  container).  [required]\n  -H, --header TEXT               Custom header that will be used in all\n                                  requests to the target server. Example: -H\n                                  \"Authorization: Bearer 123\" .\n  --show-errors-tracebacks        Show full tracebacks for internal errors.\n  --env-file TEXT                 Path to YAML file with environment\n                                  definitions (AuthN/AuthZ info, etc.). This\n                                  file must be accessible from the CLI\n                                  container.\n  --ignore-ssl-verify TEXT        Controls whether the test run verifies the\n                                  server's SSL certificate.\n  -v, --verbosity [NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL]\n  -d, --suite-execution-delay INTEGER\n                                  Adds a delay between test suite execution\n  --request-timeout INTEGER       Timeout for the http request made to the API\n  --export-junit-xml FILENAME     Export test results as JUnit XML\n  -h, --help                      Show this message and exit.\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This command is a functional equivalent of the ",(0,r.kt)("inlineCode",{parentName:"p"},"levo test")," command. Please see constraints and examples outlined for that command.")),(0,r.kt)("h3",{id:"export-env"},"export-env"),(0,r.kt)("p",null,"The environment file is used to specify authentication credentials, and optional role(s)\ninformation (for authorization tests). Please refer to ",(0,r.kt)("a",{parentName:"p",href:"/guides/security-testing/concepts/test-plans/env-yml"},"Authentication/Authorization"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"levo test-plan export-env [OPTIONS] <arguments>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Export the environment file of a test plan from Levo SaaS to the local file system.\n\nOptions:\n  --lrn TEXT                      The LRN of the test plan, whose environment\n                                  file you want to export.  [required]\n  --local-dir TEXT                Path to a local directory where the\n                                  environment file is to be exported. The\n                                  local directory must be accessible from the\n                                  CLI container. If not specified, the test\n                                  plan is exported to the current working\n                                  directory.\n  -v, --verbosity [NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL]\n                                  Accept all of the Python's log level values:\n                                  CRITICAL, ERROR, WARNING, INFO, DEBUG, and\n                                  NOTSET (all case insensitive).\n  -h, --help                      Show this message and exit.\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Levo CLI runs as a Docker container and by default mounts the current working directory on the host file system as read/write.")),(0,r.kt)("h5",{id:"usage-examples-2"},"Usage Examples"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'levo test-plan export-env --lrn "acme-gizmo-org:ws/buchi:app/Demo_crAPI:tp/Demo_crAPI" --local-dir ./')),(0,r.kt)("h2",{id:"additional-notes"},"Additional Notes"),(0,r.kt)("h3",{id:"usage-with-a-proxy"},"Usage with a proxy"),(0,r.kt)("h4",{id:"option-1-copy-proxy-ca-certificate"},"Option 1: Copy proxy CA certificate"),(0,r.kt)("p",null,"The CLI container does not have access to the host's CA certificates. If you are using a proxy with a self-signed certificate, you can copy the CA certificate to ",(0,r.kt)("inlineCode",{parentName:"p"},"$HOME/.config/configstore/ca-cert.pem")," on the host. This directory is mounted as a volume in the CLI container in the alias. The CLI will read this file if it exists and load it into the container's CA certificate store."),(0,r.kt)("h4",{id:"option-2-use-the---ignore-ssl-verify-option"},"Option 2: Use the ",(0,r.kt)("inlineCode",{parentName:"h4"},"--ignore-ssl-verify")," option"),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--ignore-ssl-verify")," flag with the ",(0,r.kt)("inlineCode",{parentName:"p"},"levo")," command to disable SSL verification for ",(0,r.kt)("strong",{parentName:"p"},"all")," requests made by the CLI, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"levo --ignore-ssl-verify test --target-url https://crapi.levo.ai --app-lrn your-app\n")),(0,r.kt)("p",null,"The usage of this option is discouraged unless absolutely necessary."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Adding the ",(0,r.kt)("inlineCode",{parentName:"p"},"--ignore-ssl-verify")," flag after the ",(0,r.kt)("inlineCode",{parentName:"p"},"test")," subcommand, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"levo test --ignore-ssl-verify"),", will cause SSL verification to be ignored only for the requests sent to the target server.")))}d.isMDXComponent=!0}}]);