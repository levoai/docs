"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[606],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=c(n),d=o,m=h["".concat(s,".").concat(d)]||h[d]||u[d]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8398:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return h}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:5},s="Levo CLI Command Reference",c={unversionedId:"levo-cli/levo-cli-command-reference",id:"levo-cli/levo-cli-command-reference",isDocsHomePage:!1,title:"Levo CLI Command Reference",description:"help",source:"@site/docs/levo-cli/levo-cli-command-reference.md",sourceDirName:"levo-cli",slug:"/levo-cli/levo-cli-command-reference",permalink:"/levo-cli/levo-cli-command-reference",editUrl:"https://github.com/levoai/docs/edit/main/docs/levo-cli/levo-cli-command-reference.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Levo CLI for Windows",permalink:"/levo-cli/levo-cli-for-windows"},next:{title:"The Environment YAML file",permalink:"/levo-cli/levo-cli-environment-file"}},p=[{value:"help",id:"help",children:[],level:2},{value:"version",id:"version",children:[],level:2},{value:"login",id:"login",children:[],level:2},{value:"test-conformance",id:"test-conformance",children:[],level:2},{value:"test",id:"test",children:[],level:2},{value:"test-plan",id:"test-plan",children:[{value:"run",id:"run",children:[],level:3}],level:2}],u={toc:p};function h(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"levo-cli-command-reference"},"Levo CLI Command Reference"),(0,a.kt)("h2",{id:"help"},"help"),(0,a.kt)("p",null,"Show help message for the CLI,"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"levo --help")),(0,a.kt)("h2",{id:"version"},"version"),(0,a.kt)("p",null,"Show the current version of the CLI."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"levo --version")),(0,a.kt)("h2",{id:"login"},"login"),(0,a.kt)("p",null,"Login (authenticate) to Levo SaaS."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"levo login")),(0,a.kt)("h2",{id:"test-conformance"},"test-conformance"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"levo test-conformance [options] <arguments>")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Perform schema conformance tests against API endpoints specified in the target-url.\n\nOptions:\n  --schema TEXT                   --schema must specify a valid URL or\n                                  absolute file path that points to an Open\n                                  API / Swagger specification.  [required]\n\n  --target-url TEXT               --target-url must specify a valid URL\n                                  pointing to a live host that implements the\n                                  endpoints specified by --schema.  [required]\n\n  -a, --auth TEXT                 Use in conjunction with '--auth'. For basic\n                                  authentication this specifies the target\n                                  server's user and password. Example:\n                                  USER:PASSWORD .\n\n  -A, --auth-type [basic]         The authentication mechanism to be used.\n                                  Only 'basic' currently supported.  [default:\n                                  basic]\n\n  --disable-reporting-to-saas     Do not send test reports to Levo's SaaS\n                                  portal.\n\n  -H, --header TEXT               Custom header that will be used in all\n                                  requests to the target server. Example: -H\n                                  \"Authorization: Bearer 123\" .\n\n  --show-errors-tracebacks        Show full tracebacks for internal errors.\n                                  [default: False]\n\n  -v, --verbosity [NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL]\n                                  Accept all of the Python's log level values:\n                                  CRITICAL, ERROR, WARNING, INFO, DEBUG, and\n                                  NOTSET (all case insensitive).\n\n  -h, --help                      Show this message and exit.\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Levo CLI runs as a Docker container and mounts the host file system. If specifying a schema file as an argument, please provide the absolute path of the file on the host filesystem.")),(0,a.kt)("h2",{id:"test"},"test"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"levo test [options] <arguments>")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Execute a test plan against the specified target-url.\n\nOptions:\n  --target-url TEXT               --target-url must specify a valid URL\n                                  pointing to a live host that implements the\n                                  endpoints that are present in the test plan.\n                                  [required]\n\n  -a, --auth TEXT                 Use in conjunction with '--auth'. For basic\n                                  authentication this specifies the target\n                                  server's user and password. Example:\n                                  USER:PASSWORD . For token and apikey\n                                  authentication this is the appropriate\n                                  key:value.\n\n  -A, --auth-type [basic|token|apikey]\n                                  The authentication mechanism to be used.\n                                  Defaults to 'basic'.  [default: basic]\n\n  --disable-reporting-to-saas     Do not send test reports to Levo's SaaS\n                                  portal.\n\n  --test-plan TEXT                --test-plan must specify a valid Levo\n                                  Resource Name (LRN) or an absolute path to a\n                                  Levo Test Plan folder.  [required]\n\n  -H, --header TEXT               Custom header that will be used in all\n                                  requests to the target server. Example: -H\n                                  \"Authorization: Bearer 123\" .\n\n  --show-errors-tracebacks        Show full tracebacks for internal errors.\n                                  [default: False]\n\n  --env-file TEXT                 Path to YAML file with environment\n                                  definitions (AuthN/AuthZ info, etc.).\n\n  -v, --verbosity [NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL]\n  -h, --help                      Show this message and exit.\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Levo CLI runs as a Docker container and mounts the host file system. If specifying a Test Plan folder as an argument, please provide the absolute path of the file on the host filesystem.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Authentication credentials and user role information might be required by some ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Plans")," for proper execution. This is to be provided using the ",(0,a.kt)("inlineCode",{parentName:"p"},"--env-file")," option. Please refer to details on ",(0,a.kt)("a",{parentName:"p",href:"/levo-cli/levo-cli-environment-file"},"the Environment YAML file"),".")),(0,a.kt)("h2",{id:"test-plan"},"test-plan"),(0,a.kt)("p",null,"Test Plan management sub commands."),(0,a.kt)("h3",{id:"run"},"run"),(0,a.kt)("p",null,"This is an alias of the ",(0,a.kt)("inlineCode",{parentName:"p"},"levo test")," command."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"levo test-plan run [options] <arguments>")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Run a test plan against the specified target-url.\n\nOptions:\n  --target-url TEXT               --target-url must specify a valid URL\n                                  pointing to a live host that implements the\n                                  endpoints that are present in the test plan.\n                                  [required]\n\n  -a, --auth TEXT                 Use in conjunction with '--auth'. For basic\n                                  authentication this specifies the target\n                                  server's user and password. Example:\n                                  USER:PASSWORD . For token and apikey\n                                  authentication this is the appropriate\n                                  key:value.\n\n  -A, --auth-type [basic|token|apikey]\n                                  The authentication mechanism to be used.\n                                  Defaults to 'basic'.  [default: basic]\n\n  --disable-reporting-to-saas     Do not send test reports to Levo's SaaS\n                                  portal.\n\n  --test-plan TEXT                --test-plan must specify a valid Levo\n                                  Resource Name (LRN) or an absolute path to a\n                                  Levo Test Plan folder.  [required]\n\n  -H, --header TEXT               Custom header that will be used in all\n                                  requests to the target server. Example: -H\n                                  \"Authorization: Bearer 123\" .\n\n  --show-errors-tracebacks        Show full tracebacks for internal errors.\n                                  [default: False]\n\n  --env-file TEXT                 Path to YAML file with environment\n                                  definitions (AuthN/AuthZ info, etc.).\n\n  -v, --verbosity [NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL]\n  -h, --help                      Show this message and exit.\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Levo CLI runs as a Docker container and mounts the host file system. If specifying a Test Plan folder as an argument, please provide the absolute path of the file on the host filesystem.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Authentication credentials and user role information might be required by some ",(0,a.kt)("inlineCode",{parentName:"p"},"Test Plans")," for proper execution. This is to be provided using the ",(0,a.kt)("inlineCode",{parentName:"p"},"--env-file")," option. Please refer to details on ",(0,a.kt)("a",{parentName:"p",href:"/levo-cli/levo-cli-environment-file"},"the Environment YAML file"),".")))}h.isMDXComponent=!0}}]);