"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5546],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||s;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7573:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var r=n(3117),a=n(102),s=(n(7294),n(3905)),o=["components"],i={sidebar_position:3},l="PCAP Sensor via YUM Package",p={unversionedId:"install-traffic-capture-sensors/pcap-sensor/pcap-sensor-yum-package",id:"install-traffic-capture-sensors/pcap-sensor/pcap-sensor-yum-package",title:"PCAP Sensor via YUM Package",description:"Install on RPM based Linux Distributions via yum",source:"@site/docs/install-traffic-capture-sensors/pcap-sensor/pcap-sensor-yum-package.md",sourceDirName:"install-traffic-capture-sensors/pcap-sensor",slug:"/install-traffic-capture-sensors/pcap-sensor/pcap-sensor-yum-package",permalink:"/install-traffic-capture-sensors/pcap-sensor/pcap-sensor-yum-package",draft:!1,editUrl:"https://github.com/levoai/docs/edit/main/docs/install-traffic-capture-sensors/pcap-sensor/pcap-sensor-yum-package.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Install PCAP Sensor on Kubernetes | Levo.ai Documentation",permalink:"/install-traffic-capture-sensors/pcap-sensor/sensor-kubernetes"},next:{title:"Sensor on AWS Fargate",permalink:"/install-traffic-capture-sensors/sensor-fargate"}},c={},u=[{value:"Install on RPM based Linux Distributions via <code>yum</code>",id:"install-on-rpm-based-linux-distributions-via-yum",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"1. Configure the package manager",id:"1-configure-the-package-manager",level:3},{value:"2. Install the pcap Sensor",id:"2-install-the-pcap-sensor",level:3},{value:"3. Start the Sensor",id:"3-start-the-sensor",level:3},{value:"Configure Satellite Address, Organization-Id and Environment",id:"configure-satellite-address-organization-id-and-environment",level:4},{value:"Start/Stop the Sensor",id:"startstop-the-sensor",level:4}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"pcap-sensor-via-yum-package"},"PCAP Sensor via YUM Package"),(0,s.kt)("h2",{id:"install-on-rpm-based-linux-distributions-via-yum"},"Install on RPM based Linux Distributions via ",(0,s.kt)("inlineCode",{parentName:"h2"},"yum")),(0,s.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"libpcap")," should be installed from the yum repository"),(0,s.kt)("li",{parentName:"ul"},"Admin (or ",(0,s.kt)("inlineCode",{parentName:"li"},"sudo"),") privileges on the host")),(0,s.kt)("h3",{id:"1-configure-the-package-manager"},"1. Configure the package manager"),(0,s.kt)("p",null,"Configure ",(0,s.kt)("inlineCode",{parentName:"p"},"yum")," to access Levo's RPM packages using the following command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"sudo tee -a /etc/yum.repos.d/levo.repo << EOF\n[levo]\nname=Levo.ai\nbaseurl=https://us-yum.pkg.dev/projects/levoai/yum-levo\nenabled=1\nrepo_gpgcheck=0\ngpgcheck=0\nEOF\n")),(0,s.kt)("h3",{id:"2-install-the-pcap-sensor"},"2. Install the pcap Sensor"),(0,s.kt)("p",null,"Install the pcap Sensor from Levo's RPM repository."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Update the list of available packages:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"sudo yum makecache\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Install the package in your repository."),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"sudo yum install levo-pcap-sensor-0.1.3\n")))),(0,s.kt)("p",null,"Enter ",(0,s.kt)("inlineCode",{parentName:"p"},"y")," when prompted."),(0,s.kt)("h3",{id:"3-start-the-sensor"},"3. Start the Sensor"),(0,s.kt)("p",null,"Sensor runs as a Systemd Service"),(0,s.kt)("h4",{id:"configure-satellite-address-organization-id-and-environment"},"Configure Satellite Address, Organization-Id and Environment"),(0,s.kt)("p",null,"The Satellite address is configured in ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/default/levo-pcap-sensor"),". The default Satellite URL is ",(0,s.kt)("inlineCode",{parentName:"p"},"https://collector.levo.ai"),"."),(0,s.kt)("p",null,"Edit ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/default/levo-pcap-sensor"),", set the ",(0,s.kt)("inlineCode",{parentName:"p"},"LEVO_SATELLITE_URL")," variable to the desired ",(0,s.kt)("inlineCode",{parentName:"p"},"host:port")," value,\nand set the ",(0,s.kt)("inlineCode",{parentName:"p"},"LEVO_ORG_ID")," to the Organization ID fetched from the Levo Dashboard.\nSet ",(0,s.kt)("inlineCode",{parentName:"p"},"LEVO_ENV")," to the desired environment name in which you wish to see you applications on the Levo Dashboard."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'...\nLEVO_ENV="your-env"\nLEVO_SATELLITE_URL="your-satellite-url"\nLEVO_ORG_ID="your-org-id"\n...\n')),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Sensor ",(0,s.kt)("strong",{parentName:"em"},"restart")," is required for the config changes to take effect.")),(0,s.kt)("h4",{id:"startstop-the-sensor"},"Start/Stop the Sensor"),(0,s.kt)("p",null,"To start the sensor"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start levo-pcap-sensor.service\n")),(0,s.kt)("p",null,"To stop the sensor"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop levo-pcap-sensor.service\n")),(0,s.kt)("p",null,"To restart the sensor"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart levo-pcap-sensor.service\n")))}m.isMDXComponent=!0}}]);